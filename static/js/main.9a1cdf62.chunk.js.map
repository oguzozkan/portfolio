{"version":3,"sources":["images/primary5.svg","images/portfolio1.svg","images/bot.png","images/portweb.png","Components/Sidebar/SidebarElements.js","Components/Sidebar/index.js","Components/Navbar/NavbarElements.js","Components/Navbar/index.js","Components/ButtonElement.js","Components/HeroSection/HeroElements.js","videos/video.mp4","videos/video3.mp4","ContactForm.js","Components/HeroSection/index.js","Components/ButtonHref.js","Components/BackgroundHistory/BackgroundElements.js","Components/BackgroundHistory/index.js","images/resumephoto3.jpg","images/bilkent.jpg","images/img3.jpg","Components/BackgroundHistory/Data.js","Components/Slide.js","images/pati.png","pages/Content.js","Components/Footer/FooterElements.js","Components/Footer/index.js","Components/Galary/Photo.js","images/img1.jpg","images/img2.jpg","images/img4.jpg","images/img5.jpg","images/img6.jpg","images/img7.jpg","images/img8.jpg","images/img10.jpg","Components/Galary/photos.js","Components/Galary/GalaryRew.js","Components/InfoSection/InfoElements.js","Components/InfoSection/index.js","images/mv1.png","Components/ImagesShadow/ShadowElements.js","Components/ResultWeather.js","loading1.svg","Components/Location.js","images/mv2.webp","images/mv4.png","Components/SliderImageBack/ImageElements.js","images/mv1.webp","Components/SliderImageBack/index.js","images/paticloud9.png","Components/Paticart.js","Components/InfoSection/Data.js","pages/home.js","images/elixir_logo_320.png","Components/Portfolio/PortfolioElements.js","Components/Portfolio/index.js","Components/NavbarEx/NavbarExElements.js","Components/NavbarEx/index.js","Components/NavHome2/NavHome2Elements.js","Components/NavHome2/index.js","pages/home2.js","Components/Deneme.js","App.js","reportWebVitals.js","index.js","images/elixirposter.jpg"],"names":["SidebarContainer","styled","aside","isOpen","CloseIcon","FaTimes","Icon","div","SidebarWrapper","SidebarMenu","ul","SidebarLink","LinkS","SideBtnWrap","SidebarRoute","LinkR","Sidebar","toggle","onClick","to","Nav","nav","scrolNAvigation","lightbg","NavbarContainer","NavLogo","MobileIcon","MobileIcon2","NavMenu","NavItem","li","NavLinks","NavBtn","Navbar","LightToggle","useState","setNav","changeStatuofNav","window","scrollY","background","useEffect","addEventListener","localStorage","setItem","scroll","scrollToTop","activeClass","smooth","duration","exact","spy","offset","style","color","Button","Link","big","fontbig","HeroContainer","HeroBg","VideoBg","video","HeroContent","HeroH1","h1","HeroP","p","HeroBtnWrapper","ArrowForward","MdArrowForward","ArrowRight","MdKeyboardArrowRight","ContactForm","Contacttoggle","AppContainer","AOS","init","setStatus","handleSubmit","e","a","preventDefault","target","elements","name","email","message","details","value","fetch","method","headers","body","JSON","stringify","response","json","result","alert","status","onSubmit","className","size","fill","htmlFor","type","id","required","setTimeout","HeroSection","isContact","console","log","hover","setHover","onHover","autoPlay","loop","muted","src","Video2","Video","onMouseEnter","onMouseLeave","primary","dark","BackgroundCointainer","BackWrapper","BackCardR","BackCardL","props","img","BackRH","BackRP","BackgroundHistory","HeadingPr","InfoPr","LinkPr","LinkDesPr","BgColor","href","textDecoration","backObjOne","img1","backObjTwo","img2","backObjThree","img3","Slide","spaceBetween","slidesPerView","onSlideChange","onSwiper","swiper","Content","FooterContainer","footer","FooterWrap","FooterLinksContainer","FooterLinksWrapper","FooterLinkItems","FooterLinkTitle","FooterLink","SocialMedia","section","SocialMediaWrap","SocialLogo","WebRights","small","SocialIcons","SocialIconLink","Footer","Date","getFullYear","imgWithClick","cursor","Photo","index","photo","margin","direction","top","left","imgStyle","position","event","alt","photos","width","height","img4","img5","img6","img7","img8","img10","SortablePhoto","SortableElement","item","SortableGallery","SortableContainer","items","renderImage","GalaryRew","setItems","onSortEnd","oldIndex","newIndex","arrayMove","axis","InfoContainer","InfoWrapper","InfoRow","imgStart","Column1","Column2","TextWrapper","TopLine","Heading","lightText","Subtitle","darkText","BtnWrap","btndisplay","ImgWrap","Img","InfoSection","topLine","headline","dark2","description","buttonLabel","Hlink","changeToggle","InfoContainerM","Img2","imageState2","SliderImageDiv","SliderImageMainDiv2","SliderImageDiv2","imageState","SliderImageBack","setImage","setImage2","changeStatuofImg1","changeStatuofImg2","imgPath2","imgPath1","Pati","patiState","Paticart","setPati","changeStatuofPati","PatiSvg","homeObjOne","lightTextDesc","require","default","homeObjTwo","homeObjThree","homeObjFour","homeObjFive","Home","setIsOpen","setContact","setLight","getItem","PortfolioContainer","PortfolioWrap","PortfolioCart","ImgIcon","PortfolioH1","PortfolioP","Portfolio","NavbarEx","closestate","image","elixirImg1","title","onClose","NavHome2","Home2","setlight","setclose","getStat","g","parse","Deneme","App","basename","process","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a1cdf62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/primary5.95a7ecd7.svg\";","export default __webpack_public_path__ + \"static/media/portfolio1.b650d6ed.svg\";","export default __webpack_public_path__ + \"static/media/bot.9a22ab5a.png\";","export default __webpack_public_path__ + \"static/media/portweb.fbeb3599.png\";","import styled from \"styled-components\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Link as LinkR } from \"react-router-dom\";\nimport { Link as LinkS } from \"react-scroll\";\n\nexport const SidebarContainer = styled.aside`\n  position: fixed;\n  z-index: 999;\n  width: 100%;\n  height: 100%;\n  background: #0d0d0d;\n  display: grid;\n  align-items: center;\n\n  left: 0;\n  transition: 0.3 ease-in-out;\n  opacity: ${({ isOpen }) => (isOpen ? \"100%\" : \"0\")};\n  top: ${({ isOpen }) => (isOpen ? \"0\" : \"-100%\")};\n`;\n\nexport const CloseIcon = styled(FaTimes)`\n  color: #fff;\n`;\n\nexport const Icon = styled.div`\n  position: absolute;\n  background: transparent;\n  cursor: pointer;\n  top: 1.2rem;\n  right: 1.5rem;\n  outline: none;\n`;\nexport const SidebarWrapper = styled.div`\n  color: #fff;\n`;\nexport const SidebarMenu = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(6, 80px);\n  text-align: center;\n  padding-left: 0px;\n\n  @media screen and (max-width: 480px) {\n    grid-template-rows: repeat(6, 60px);\n  }\n`;\n\nexport const SidebarLink = styled(LinkS)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  text-decoration: none;\n  list-style: none;\n  transition: 0.2 ease-in-out;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    color: #01bf78;\n    transition: 0.2 ease-in-out;\n  }\n`;\nexport const SideBtnWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const SidebarRoute = styled(LinkR)`\n  border-radius: 50px;\n  background: #8defff;\n  white-space: nowrap;\n  padding: 16px 64px;\n  color: whitesmoke;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: 0.2 ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    color: #01bf78;\n    transition: 0.2 ease-in-out;\n    background: #fff;\n  }\n`;\n","import React from \"react\";\nimport {\n  SidebarContainer,\n  Icon,\n  CloseIcon,\n  SidebarWrapper,\n  SidebarMenu,\n  SidebarLink,\n  SideBtnWrap,\n  SidebarRoute,\n} from \"./SidebarElements\";\n\nfunction Sidebar({ isOpen, toggle }) {\n  return (\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n      <Icon onClick={toggle}>\n        <CloseIcon />\n      </Icon>\n      <SidebarWrapper>\n        <SidebarMenu>\n          <SidebarLink to=\"about\" onClick={toggle}>\n            About\n          </SidebarLink>\n          <SidebarLink to=\"/#\" onClick={toggle}>\n            Cart\n          </SidebarLink>\n          <SidebarLink to=\"/#\" onClick={toggle}>\n            Profile\n          </SidebarLink>\n          <SidebarLink to=\"/#\" onClick={toggle}>\n            Sign-Up\n          </SidebarLink>\n        </SidebarMenu>\n        <SideBtnWrap>\n          <SidebarRoute to=\"/#\">Sign-In</SidebarRoute>\n        </SideBtnWrap>\n      </SidebarWrapper>\n    </SidebarContainer>\n  );\n}\n\nexport default Sidebar;\n","import styled from \"styled-components\";\nimport { Link as LinkR } from \"react-router-dom\";\nimport { Link as LinkS } from \"react-scroll\";\n\nexport const Nav = styled.nav`\n  background: ${({ scrolNAvigation, lightbg }) =>\n    scrolNAvigation\n      ? lightbg\n        ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`\n        : \"#0c0c0c\"\n      : \"transparent\"};\n\n  height: 80px;\n  display: flex;\n  margin-top: -80px;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  @media screen and (max-width: 960px) {\n    transition: 0.8 all case;\n  }\n`;\nexport const NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 24px;\n  max-width: 1100px;\n`;\nexport const NavLogo = styled(LinkR)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  justify-self: flex-start;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-left: 24px;\n  font-size: 2rem;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nexport const MobileIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 60%);\n    font-size: 1.8rem;\n    cursor: pointer;\n    color: #fff;\n  }\n`;\nexport const MobileIcon2 = styled.div`\n  color: ${({ lightbg }) =>\n    lightbg\n      ? `#000`\n      : `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`};\n  border-radius: 50px;\n\n  white-space: nowrap;\n  padding: 10px 20px;\n  margin-top: 10px;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    font-size: 24px;\n  }\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    margin-top: -5px;\n    right: 0;\n    transform: translate(-100%, 60%);\n    cursor: pointer;\n  }\n`;\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n  margin-right: -20px;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavItem = styled.li`\n  height: 80px;\n`;\n\nexport const NavLinks = styled(LinkS)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1 rem;\n  height: 100%;\n  cursor: pointer;\n  margin-left: 20px;\n\n  &.active {\n    border-bottom: 4px solid #fff;\n    border-bottom-color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  }\n`;\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-top: -20px;\n`;\n\n// export const NavBtnLink = styled(LinkR)`\n//   border-radius: 50px;\n//   background: #8defff;\n//   white-space: nowrap;\n//   padding: 10px 20px;\n//   color: #010606;\n//   font-size: 16px;\n//   outline: none;\n//   border: none;\n//   cursor: pointer;\n//   transition: all 0.2s ease-in-out;\n//   text-decoration: none;\n\n//   &:hover {\n//     transition: all 0.2s ease-in-out;\n//     background: #fff;\n//     color: #010606;\n//   }\n// `;\n","import React, { useState, useEffect } from \"react\";\nimport { FaBars, FaSun, FaMoon } from \"react-icons/fa\";\nimport {\n  Nav,\n  NavbarContainer,\n  NavLogo,\n  MobileIcon,\n  MobileIcon2,\n  NavMenu,\n  NavItem,\n  NavLinks,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\nimport { animateScroll as scroll } from \"react-scroll\";\nconst Navbar = ({ toggle, LightToggle, lightbg }) => {\n  const [scrolNAvigation, setNav] = useState(false);\n  const changeStatuofNav = () => {\n    if (window.scrollY >= 255) {\n      setNav(true);\n      if (lightbg) {\n        Nav.background = \"#000\";\n      } else {\n        Nav.background = \"#fff\";\n      }\n    } else {\n      setNav(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeStatuofNav);\n    localStorage.setItem(\"bgStatus\", false);\n  }, []);\n  const toggleUp = () => {\n    scroll.scrollToTop();\n  };\n  return (\n    <Nav scrolNAvigation={scrolNAvigation} lightbg={lightbg}>\n      <NavbarContainer>\n        <NavLogo to=\"/#\" onClick={toggleUp} lightbg={lightbg}>\n          Oguzhan\n        </NavLogo>\n        <MobileIcon onClick={toggle}>\n          <FaBars />\n        </MobileIcon>\n\n        <NavMenu>\n          <NavItem></NavItem>\n          <NavItem>\n            <NavLinks\n              activeClass=\"active\"\n              smooth={true}\n              duration={100}\n              exact=\"true\"\n              spy={true}\n              offset={-80}\n              to=\"about\"\n              lightbg={lightbg}\n            >\n              About\n            </NavLinks>\n          </NavItem>\n          <NavItem>\n            <NavLinks\n              activeClass=\"active\"\n              smooth={true}\n              duration={100}\n              exact=\"true\"\n              spy={true}\n              offset={-75}\n              to=\"mySwiper\"\n              lightbg={lightbg}\n            >\n              Resume\n            </NavLinks>\n          </NavItem>\n          <NavItem>\n            <NavLinks\n              activeClass=\"active\"\n              smooth={true}\n              duration={100}\n              exact=\"true\"\n              spy={true}\n              offset={-75}\n              to=\"contacts\"\n              lightbg={lightbg}\n            >\n              Contact\n            </NavLinks>\n          </NavItem>\n        </NavMenu>\n        <NavBtn> </NavBtn>\n        <MobileIcon2 onClick={LightToggle} lightbg={lightbg}>\n          {lightbg ? <FaSun /> : <FaMoon style={{ color: \"#fff\" }} />}\n        </MobileIcon2>\n      </NavbarContainer>\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","import styled from \"styled-components\";\nimport { Link } from \"react-scroll\";\n\nexport const Button = styled(Link)`\n  border-radius: 50px;\n  border: solid 1px #fff;\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(50deg,\n    rgba(230, 214, 156, 0.2) 20%,\n    rgba(190, 197, 199, 1) 100%)`\n      : `linear-gradient(90deg, rgba(255,238,187,1) 0%, rgba(87,87,86,0.15843840954350494) 0%, rgba(0,0,0,0.13238798937543772) 100%) `};\n  white-space: nowrap;\n  padding: ${({ big }) => (big ? \"14px 48px\" : \"12px 30px\")};\n  color: ${({ lightbg }) => (lightbg ? \"#010606\" : \"#fff\")};\n  font-size: ${({ fontbig }) => (fontbig ? \"20px \" : \"16px\")};\n  outline: none;\n  z-index: 3;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    border-style: inset;\n\n    color: ${({ lightbg }) => (lightbg ? \"#010606\" : \"#fff\")};\n    border-color: rgba(250, 250, 250, 0.5) transparent transparent;\n  }\n`;\n","import styled from \"styled-components\";\nimport { MdKeyboardArrowRight, MdArrowForward } from \"react-icons/md\";\nexport const HeroContainer = styled.div`\n  /* background: #0c0c0c; */\n  background: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 30 px;\n  height: 900px;\n  position: relative;\n  z-index: 2;\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background: linear-gradient(\n        180deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.6) 100%\n      ),\n      linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, transparent 100%);\n    z-index: 2;\n  }\n`;\n\nexport const HeroBg = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nexport const VideoBg = styled.video`\n  width: 100%;\n  height: 100%;\n  --o-object-fit: cover;\n  object-fit: cover;\n  background: #232a34;\n`;\n\nexport const HeroContent = styled.div`\n  z-index: 3;\n  max-width: 1200px;\n  position: absolute;\n  padding: 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const HeroH1 = styled.h1`\n  color: #fff;\n  font-size: 48px;\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n    font-size: 40px;\n  }\n  @media screen and (max-width: 480) {\n    font-size: 32px;\n  }\n`;\nexport const HeroP = styled.p`\n  margin-top: 24px;\n  color: #fff;\n  font-size: 24px;\n  text-align: center;\n  max-width: 600px;\n\n  @media screen and (max-width: 768px) {\n    font-size: 24px;\n  }\n  @media screen and (max-width: 480) {\n    font-size: 18px;\n  }\n`;\nexport const HeroBtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 32px;\n  text-align: center;\n`;\nexport const ArrowForward = styled(MdArrowForward)`\n  margin-left: 8px;\n  font-size: 20px;\n`;\n\nexport const ArrowRight = styled(MdKeyboardArrowRight)`\n  margin-left: 8px;\n  font-size: 20px;\n`;\n","export default __webpack_public_path__ + \"static/media/video.73e60d22.mp4\";","export default __webpack_public_path__ + \"static/media/video3.776dc8e4.mp4\";","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport \"../src/css/ContactForm.css\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { MdCancel } from \"react-icons/md\";\nconst ContactForm = ({ Contacttoggle }) => {\n  const setTimeToMail = () => {\n    setTimeout(() => {\n      Contacttoggle();\n    }, 1);\n  };\n\n  const AppContainer = styled.div`\n    width: 50%;\n    height: 60%;\n    display: flex;\n    border-radius: 26px;\n    border: 2px solid #fff;\n    align-items: center;\n    justify-content: center;\n    z-index: 20;\n    backdrop-filter: blur(10px);\n    padding-top: 5px;\n    padding-bottom: 20px;\n\n    background: linear-gradient(\n      90deg,\n      rgba(255, 238, 187, 1) 0%,\n      rgba(249, 244, 228, 0.100455216266194) 0%,\n      rgba(255, 255, 255, 0.1) 100%\n    );\n  `;\n  useEffect(() => {\n    AOS.init({ duration: 1000 });\n  }, []);\n  const [status, setStatus] = useState(\"Submit\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const { name, email, message } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value,\n    };\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(details),\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n  return (\n    <AppContainer data-aos=\"fade-up\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"row\">\n          <div className=\"col-right\">\n            <MdCancel\n              onClick={Contacttoggle}\n              size={30}\n              style={{ fill: \"white\" }}\n            ></MdCancel>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-25\">\n            <label htmlFor=\"name\">Name:</label>\n          </div>\n          <div className=\"col-75\">\n            <input type=\"text\" id=\"name\" required />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-25\">\n            <label htmlFor=\"email\">Email:</label>\n          </div>\n          <div className=\"col-75\">\n            <input type=\"email\" id=\"email\" required />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-25\">\n            <label htmlFor=\"message\">Message:</label>\n          </div>\n          <div className=\"col-75\">\n            <textarea id=\"message\" required />\n          </div>\n        </div>\n        <div className=\"vertical-center\">\n          <button type=\"submit\" onClick={setTimeToMail}>\n            Send\n          </button>\n        </div>\n      </form>\n    </AppContainer>\n  );\n};\n\nexport default ContactForm;\n","import React, { useState } from \"react\";\nimport { Button } from \"../ButtonElement\";\nimport {\n  HeroContainer,\n  HeroBg,\n  VideoBg,\n  HeroContent,\n  HeroH1,\n  HeroP,\n  HeroBtnWrapper,\n  ArrowForward,\n  ArrowRight,\n} from \"./HeroElements\";\nimport Video from \"../../videos/video.mp4\";\nimport Video2 from \"../../videos/video3.mp4\";\nimport ContactForm from \"../../ContactForm\";\nconst HeroSection = ({ isContact, Contacttoggle, lightbg }) => {\n  console.log(\"isContact\" + isContact);\n  const [hover, setHover] = useState(false);\n  const onHover = () => {\n    setHover(!hover);\n  };\n  return (\n    <HeroContainer id=\"home\" lightbg={lightbg}>\n      <HeroBg>\n        {lightbg ? (\n          <VideoBg autoPlay loop muted src={Video2} type=\"video/mp4\"></VideoBg>\n        ) : (\n          <VideoBg autoPlay loop muted src={Video} type=\"video/mp4\"></VideoBg>\n        )}\n        <VideoBg autoPlay loop muted src={Video} type=\"video/mp4\"></VideoBg>\n      </HeroBg>\n      <HeroContent isContact={isContact} Contacttoggle={Contacttoggle}>\n        <HeroH1>Hi, I am Oguzhan Ozkan</HeroH1>\n        <HeroP>If you want to contact me </HeroP>\n        <HeroBtnWrapper>\n          <Button\n            onClick={Contacttoggle}\n            onMouseEnter={onHover}\n            onMouseLeave={onHover}\n            primary=\"true\"\n            dark=\"true\"\n            to=\"#\"\n            style={{ color: \"#fff\" }}\n          >\n            Send Mail {hover ? <ArrowForward /> : <ArrowRight />}\n          </Button>\n        </HeroBtnWrapper>\n      </HeroContent>\n      {isContact ? (\n        <ContactForm isContact={isContact} Contacttoggle={Contacttoggle} />\n      ) : (\n        <></>\n      )}\n    </HeroContainer>\n  );\n};\n\nexport default HeroSection;\n","import styled from \"styled-components\";\n\nexport const Button = styled.div`\n  border-radius: 50px;\n  z-index: 3;\n  border: solid 1px #fff;\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(50deg,\n    rgba(230, 214, 156, 0.2) 20%,\n    rgba(190, 197, 199, 1) 100%)`\n      : `linear-gradient(50deg,\n    rgba(87, 87, 86, 0.2) 20%,\n    rgba(187, 185, 190, 0,2232221) 100%)  `};\n  white-space: nowrap;\n  padding: ${({ big }) => (big ? \"14px 48px\" : \"12px 30px\")};\n  color: ${({ lightbg }) => (lightbg ? \"#010606\" : \"#fff\")};\n  font-size: ${({ fontbig }) => (fontbig ? \"20px \" : \"16px\")};\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    border-style: inset;\n    border-color: rgba(250, 250, 250, 0.4) transparent transparent;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const BackgroundCointainer = styled.div`\n  min-height: 88vh;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  backdrop-filter: blur(10px);\n  border-radius: 8px 24px;\n\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(50deg,\n    rgba(230, 214, 156, 0.2) 20%,\n    rgba(255, 255, 255, 1) 100%)`\n      : `linear-gradient(50deg,\n    rgba(87, 87, 86, 0.2) 20%,\n    rgba(0, 0, 0, 1) 100%)`};\n\n  @media screen and (max-width: 480px) {\n    padding: 30px;\n  }\n`;\n\n// background: rgba(237, 251, 252, 0.2);\n// background: linear-gradient(\n//   50deg,\n//   rgba(237, 251, 252, 0.2) 20%,\n//   rgba(252, 255, 255, 1) 100%\n// );\n\nexport const BackWrapper = styled.div`\n  width: 90%;\n  max-width: 1000px;\n  margin: 50px auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n    margin: 0 20px;\n  }\n`;\n\nexport const BackCardR = styled.div`\n  width: 50%;\n  min-height: 400px;\n  background-color: ${({ lightbg }) => (lightbg ? \"#ccc599\" : \"#000\")};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  border-radius: 8px 32px;\n  color: white;\n  margin-left: -150px;\n  flex-direction: column;\n\n  @media only screen and (max-width: 768px) {\n    width: 90%;\n    margin: 0;\n    margin-top: -100px;\n  }\n`;\nexport const BackCardL = styled.div`\n  width: 90%;\n  height: 600px;\n  background: url(${(props) => props.img}) no-repeat center / cover;\n  background-repeat: no-repeat;\n  object-fit: cover;\n  border-radius: 8px;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    height: 400px;\n  }\n`;\n\nexport const BackRH = styled.h1`\n  font-size: 40px;\n  font-weight: lighter;\n`;\n\nexport const BackRP = styled.p`\n  margin: 20px 0;\n  font-weight: 500;\n  line-height: 25px;\n`;\n\nexport const BackRA = styled.a`\n  text-decoration: none;\n  text-transform: uppercase;\n  background-color: white;\n  color: black;\n  padding: 20px 30px;\n  display: inline-block;\n  letter-spacing: 2px;\n`;\n","import React from \"react\";\nimport { Button } from \"../ButtonHref\";\nimport {\n  BackCardR,\n  BackCardL,\n  BackWrapper,\n  BackgroundCointainer,\n  BackRH,\n  BackRP,\n  BackRA,\n} from \"./BackgroundElements\";\n\nconst BackgroundHistory = ({\n  HeadingPr,\n  InfoPr,\n  LinkPr,\n  LinkDesPr,\n  BgColor,\n  img,\n  lightbg,\n}) => {\n  return (\n    <>\n      <BackgroundCointainer lightbg={lightbg}>\n        <BackWrapper>\n          <BackCardL img={img}></BackCardL>\n          <BackCardR lightbg={lightbg}>\n            <BackRH>{HeadingPr}</BackRH>\n            <BackRP>{InfoPr}</BackRP>\n            <Button primary=\"true\" dark=\"true\" lightbg={lightbg}>\n              <a\n                href={LinkPr}\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#fff\",\n                }}\n              >\n                {LinkDesPr}\n              </a>\n            </Button>\n          </BackCardR>\n        </BackWrapper>\n      </BackgroundCointainer>\n    </>\n  );\n};\n\nexport default BackgroundHistory;\n","export default __webpack_public_path__ + \"static/media/resumephoto3.cafacd86.jpg\";","export default __webpack_public_path__ + \"static/media/bilkent.7e1493ab.jpg\";","export default __webpack_public_path__ + \"static/media/img3.38fc7a9f.jpg\";","import img1 from \"../../images/resumephoto3.jpg\";\n\nimport img2 from \"../../images/bilkent.jpg\";\nimport img3 from \"../../images/img3.jpg\";\nexport const backObjOne = {\n  HeadingPr: \"RESUME\",\n  InfoPr: \"I would like to share my resume here\",\n  LinkPr:\n    \"https://drive.google.com/uc?id=1DQw1UaA8JYhtLmw0TipglzRijUG3u7r0&export=download\",\n  LinkDesPr: \"Direct Download\",\n  BgColor: false,\n  img: img1,\n};\nexport const backObjTwo = {\n  HeadingPr: \"EDUCATION\",\n  InfoPr: \"Bilkent University (Information Technologies and Systems)\",\n  LinkPr: \"https://w3.bilkent.edu.tr/bilkent/\",\n  LinkDesPr: \"CTIS\",\n  BgColor: true,\n  img: img2,\n};\nexport const backObjThree = {\n  HeadingPr: \"Resume\",\n  InfoPr: \"I would like to share my resume here\",\n  LinkPr:\n    \"https://drive.google.com/uc?id=1DQw1UaA8JYhtLmw0TipglzRijUG3u7r0&export=download\",\n  LinkDesPr: \"Direct Download\",\n  BgColor: false,\n  img: img3,\n};\n","import React, { useState } from \"react\";\nimport \"swiper/swiper.min.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport BackgroundHistory from \"./BackgroundHistory\";\nimport styled from \"styled-components\";\nimport {\n  backObjOne,\n  backObjTwo,\n  backObjThree,\n} from \"../Components/BackgroundHistory/Data\";\n// const slideData = [{ text: \"skyline\", img: { pati } }];\n// const text2 = \"deneme2\";\n// const myImgstyle = {\n//   borderRadius: \"20px\",\n//   height: \"20px\",\n//   weight: \"20px\",\n//   margin: \"3px 3px 3px 3px\",\n// };\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  padding: 25px;\n  padding-bottom: 60px;\n  align-items: center;\n  justify-content: center;\n  background: #000;\n`;\n\nfunction Slide({ lightbg }) {\n  return (\n    /*\n           <AppContainer className=\"resume\">\n        <ScrollingCarousel>\n        {\" \"}\n        <BackgroundHistory></BackgroundHistory>\n        <BackgroundHistory></BackgroundHistory>\n        <BackgroundHistory></BackgroundHistory>\n      </ScrollingCarousel> */\n\n    <Swiper\n      className=\"mySwiper\"\n      spaceBetween={10}\n      slidesPerView={1.1}\n      onSlideChange={() => console.log(\"slide change\")}\n      onSwiper={(swiper) => console.log(swiper)}\n      style={{ background: lightbg ? \"#fff\" : \"#000\" }}\n    >\n      <SwiperSlide>\n        <BackgroundHistory\n          {...backObjOne}\n          lightbg={lightbg}\n        ></BackgroundHistory>\n      </SwiperSlide>\n      <SwiperSlide>\n        <BackgroundHistory\n          {...backObjTwo}\n          lightbg={lightbg}\n        ></BackgroundHistory>\n      </SwiperSlide>\n      <SwiperSlide>\n        <BackgroundHistory\n          {...backObjThree}\n          lightbg={lightbg}\n        ></BackgroundHistory>\n      </SwiperSlide>\n    </Swiper>\n    /* <SlideElement\n          image={man}\n          text1=\"Personal\"\n          galleryGroup={(galleryState) => setGallery(0)}\n          onClick={console.log({ galleryState })}\n        />\n        <SlideElement\n          image={gallery}\n          text1=\"Photo\"\n          galleryGroup={(galleryState) => setGallery(1)}\n        />\n        <SlideElement\n          image={computer}\n          text1=\"Work\"\n          galleryGroup={(galleryState) => setGallery(2)}\n        />     </AppContainer>*/\n  );\n}\nexport default Slide;\n","export default __webpack_public_path__ + \"static/media/pati.3616f9ae.png\";","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Slide from \"../Components/Slide\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport pati from \"../images/pati.png\";\nimport { Col, Row } from \"react-bootstrap\";\n\nfunction Content() {\n  return (\n    <div style={{ background: \"#000000\" }} id=\"cart\">\n      <Row>\n        <Col lg={2} />\n        <Col lg={2}>\n          <Card className=\"bg-dark text-white \">\n            <Card.Img src={pati} alt=\"Card image\" />\n            <Card.ImgOverlay>\n              <Card.Title>Card title</Card.Title>\n              <Card.Text>This is a wider card with supporting</Card.Text>\n              <Card.Text>Last updated 3 mins ago</Card.Text>\n            </Card.ImgOverlay>\n          </Card>\n        </Col>\n        <Col lg={2}>\n          <Card className=\"bg-dark text-white \">\n            <Card.Img src={pati} alt=\"Card image\" />\n            <Card.ImgOverlay>\n              <Card.Title>Card title</Card.Title>\n              <Card.Text>This is a wider card with supporting</Card.Text>\n              <Card.Text>Last updated 3 mins ago</Card.Text>\n            </Card.ImgOverlay>\n          </Card>\n        </Col>\n        <Col lg={2}>\n          <Card className=\"bg-dark text-white \">\n            <Card.Img src={pati} alt=\"Card image\" />\n            <Card.ImgOverlay>\n              <Card.Title>Card title</Card.Title>\n              <Card.Text>This is a wider card with supporting</Card.Text>\n              <Card.Text>Last updated 3 mins ago</Card.Text>\n            </Card.ImgOverlay>\n          </Card>\n        </Col>\n        <Col lg={2}>\n          <Card className=\"bg-dark text-white \">\n            <Card.Img src={pati} alt=\"Card image\" />\n            <Card.ImgOverlay>\n              <Card.Title>Card title</Card.Title>\n              <Card.Text>This is a wider card with supporting</Card.Text>\n              <Card.Text>Last updated 3 mins ago</Card.Text>\n            </Card.ImgOverlay>\n          </Card>\n        </Col>\n        <Col lg={2}></Col>\n      </Row>\n      <Row className=\"mx-auto my-4\"></Row>\n      <Row className=\"mx-auto my-2\">\n        <Col lg={4}> </Col>\n\n        <Col lg={4}>\n          <Slide />\n        </Col>\n\n        <Col lg={4}> </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Content;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const FooterContainer = styled.footer`\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`\n      : `#000  `};\n`;\n\n// background: ${({ lightbg }) =>\n// lightbg\n//   ? `linear-gradient(50deg,\n// rgba(220, 214, 156, 0.2) 20%,\n// rgba(255, 255, 255, 1) 60%, transparent 100%)`\n//   : `linear-gradient(50deg,\n// rgba(87, 87, 86, 0.2) 20%,\n// rgba(0, 0, 0, 1) 60%, transparent 100%)  `};\n\n// lightbg\n//       ? `linear-gradient(90deg,\n//     rgba(220, 214, 156, 0.2) 30%,\n//     rgba(255, 255, 255, 1) 60%)`\n//       : `linear-gradient(90deg,\n//         rgba(37, 37, 36, 1) 10%,\n//     rgba(10, 10, 10, 1) 100%)  `};\n\nexport const FooterWrap = styled.div`\n  padding: 24px 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 1100px;\n  margin: 0 auto;\n  z-index: 1;\n`;\nexport const FooterLinksContainer = styled.div`\n  display: flex;\n  justify-content: center;\n\n  @media screen and (max-width: 820px) {\n    padding-top: 32px;\n  }\n`;\nexport const FooterLinksWrapper = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n  }\n`;\n\nexport const FooterLinkItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 16px;\n  text-align: left;\n  width: 160px;\n  box-sizing: border-box;\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n\n  @media screen and (max-width: 420px) {\n    margin: 0;\n    padding: 10px;\n    width: 100%;\n  }\n`;\n\nexport const FooterLinkTitle = styled.h1`\n  font-size: 16px;\n  margin-bottom: 15px;\n`;\nexport const FooterLink = styled(Link)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  text-decoration: none;\n  margin-bottom: 0.4rem;\n  font-size: 15px;\n\n  &:hover {\n    color: #01bf71;\n    transition: 0.3s ease-out;\n  }\n`;\n\nexport const SocialMedia = styled.section`\n  max-width: 1000px;\n  width: 100%;\n`;\n\nexport const SocialMediaWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1100px;\n  margin: 40px auto 0 auto;\n\n  @media screen and (max-width: 820px) {\n    flex-direction: column;\n  }\n`;\n\nexport const SocialLogo = styled(Link)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  justify-self: start;\n  cursor: pointer;\n  text-decoration: none;\n  margin-bottom: 0.4rem;\n  font-size: 24px;\n  align-items: center;\n  font-weight: bold;\n`;\nexport const WebRights = styled.small`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  margin-bottom: 16px;\n`;\n\nexport const SocialIcons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 240px;\n`;\nexport const SocialIconLink = styled.a`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  font-size: 24px;\n`;\n","import React, { useEffect } from \"react\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { FaFacebook, FaInstagram, FaGithub, FaLinkedin } from \"react-icons/fa\";\nimport {\n  FooterContainer,\n  FooterWrap,\n  FooterLinksContainer,\n  FooterLinksWrapper,\n  FooterLinkTitle,\n  FooterLinkItems,\n  FooterLink,\n  SocialIconLink,\n  SocialIcons,\n  SocialLogo,\n  SocialMedia,\n  SocialMediaWrap,\n  WebRights,\n} from \"./FooterElements\";\nconst Footer = ({ lightbg }) => {\n  useEffect(() => {\n    // AOS.init({});\n  }, []);\n  return (\n    <FooterContainer\n      // data-aos=\"fade-zoom-in\"\n      // data-aos-easing=\"ease-in-back\"\n      // data-aos-delay=\"100\"\n      // data-aos-offset=\"0\"\n      lightbg={lightbg}\n    >\n      <FooterWrap>\n        <FooterLinksContainer>\n          <FooterLinksWrapper>\n            <FooterLinkItems lightbg={lightbg} id=\"contacts\">\n              <FooterLinkTitle>About ME</FooterLinkTitle>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                About Us\n              </FooterLink>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                Who am I\n              </FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems lightbg={lightbg}>\n              <FooterLinkTitle>About ME</FooterLinkTitle>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                About Us\n              </FooterLink>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                Who am I\n              </FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n          <FooterLinksWrapper>\n            <FooterLinkItems lightbg={lightbg}>\n              <FooterLinkTitle>About ME</FooterLinkTitle>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                About Us\n              </FooterLink>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                Who am I\n              </FooterLink>\n            </FooterLinkItems>\n            <FooterLinkItems lightbg={lightbg}>\n              <FooterLinkTitle>About ME</FooterLinkTitle>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                About Us\n              </FooterLink>\n              <FooterLink to=\"#\" lightbg={lightbg}>\n                Who am I\n              </FooterLink>\n            </FooterLinkItems>\n          </FooterLinksWrapper>\n        </FooterLinksContainer>\n        <SocialMedia>\n          <SocialMediaWrap>\n            <SocialLogo to=\"/\" lightbg={lightbg}>\n              Oguzhan\n            </SocialLogo>\n            <WebRights lightbg={lightbg}>\n              Oguzhan {new Date().getFullYear()} All right reseved.\n            </WebRights>\n            <SocialIcons>\n              <SocialIconLink\n                href=\"https://www.facebook.com/oguzhan.ozkan.547\"\n                aria-label=\"Facebook\"\n                lightbg={lightbg}\n              >\n                <FaFacebook></FaFacebook>\n              </SocialIconLink>\n\n              <SocialIconLink\n                href=\"https://www.instagram.com/oguzhanzkn/\"\n                aria-label=\"Instagram\"\n                lightbg={lightbg}\n              >\n                <FaInstagram></FaInstagram>\n              </SocialIconLink>\n              <SocialIconLink\n                lightbg={lightbg}\n                href=\"https://www.linkedin.com/in/oguzhan-ozkan-588465175\"\n                aria-label=\"Linkedin\"\n              >\n                <FaLinkedin></FaLinkedin>\n              </SocialIconLink>\n\n              <SocialIconLink\n                href=\"https://github.com/oguzozkan\"\n                aria-label=\"Github\"\n                lightbg={lightbg}\n              >\n                <FaGithub></FaGithub>\n              </SocialIconLink>\n            </SocialIcons>\n          </SocialMediaWrap>\n        </SocialMedia>\n      </FooterWrap>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst imgWithClick = { cursor: \"pointer\" };\n\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\n  const imgStyle = { margin: margin };\n  if (direction === \"column\") {\n    imgStyle.position = \"absolute\";\n    imgStyle.left = left;\n    imgStyle.top = top;\n  }\n\n  const handleClick = (event) => {\n    onClick(event, { photo, index });\n  };\n\n  return (\n    <img\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\n      {...photo}\n      onClick={onClick ? handleClick : null}\n      alt=\"img\"\n    />\n  );\n};\n\nexport default Photo;\n","export default __webpack_public_path__ + \"static/media/img1.119f4f48.jpg\";","export default __webpack_public_path__ + \"static/media/img2.b13a43c7.jpg\";","export default __webpack_public_path__ + \"static/media/img4.df5f73fb.jpg\";","export default __webpack_public_path__ + \"static/media/img5.5f447ba4.jpg\";","export default __webpack_public_path__ + \"static/media/img6.6ff1b0b3.jpg\";","export default __webpack_public_path__ + \"static/media/img7.e268edfe.jpg\";","export default __webpack_public_path__ + \"static/media/img8.9fc87d7a.jpg\";","export default __webpack_public_path__ + \"static/media/img10.0e136bae.jpg\";","import img1 from \"../../images/img1.jpg\";\nimport img2 from \"../../images/img2.jpg\";\nimport img3 from \"../../images/img3.jpg\";\nimport img4 from \"../../images/img4.jpg\";\nimport img5 from \"../../images/img5.jpg\";\nimport img6 from \"../../images/img6.jpg\";\nimport img7 from \"../../images/img7.jpg\";\nimport img8 from \"../../images/img8.jpg\";\nimport img10 from \"../../images/img10.jpg\";\n\nexport const photos = [\n  {\n    src: img1,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img2,\n    width: 1,\n    height: 1,\n  },\n  {\n    src: img3,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img4,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img5,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img6,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img7,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img8,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img10,\n    width: 4,\n    height: 3,\n  },\n];\nexport const photos1 = [\n  {\n    src: img2,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img2,\n    width: 1,\n    height: 1,\n  },\n  {\n    src: img3,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img4,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img5,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img6,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img7,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img8,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img10,\n    width: 4,\n    height: 3,\n  },\n];\nexport const photos2 = [\n  {\n    src: img2,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img2,\n    width: 1,\n    height: 1,\n  },\n  {\n    src: img3,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img4,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img5,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img6,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img7,\n    width: 3,\n    height: 4,\n  },\n  {\n    src: img8,\n    width: 4,\n    height: 3,\n  },\n  {\n    src: img10,\n    width: 4,\n    height: 3,\n  },\n];\n","import React, { useState } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport Photo from \"./Photo\";\nimport arrayMove from \"array-move\";\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\nimport { photos, photos1, photos2 } from \"./photos\";\n\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\nconst SortableGallery = SortableContainer(({ items }) => (\n  <Gallery\n    photos={items}\n    renderImage={(props) => <SortablePhoto {...props} />}\n  />\n));\n\nfunction GalaryRew() {\n  const [items, setItems] = useState(photos);\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setItems(arrayMove(items, oldIndex, newIndex));\n  };\n\n  return (\n    <div id=\"galary\" style={{ background: \"black\" }}>\n      <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\n    </div>\n  );\n}\nexport default GalaryRew;\n","import styled from \"styled-components\";\n\nexport const InfoContainer = styled.div`\n  color: #fff;\n  /* background: ${({ lightbg }) => (lightbg ? \"#f9f9f9\" : \"#010606\")}; */\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`\n      : `#000  `};\n  @media screen and (max-width: 768px) {\n    padding: 100px 0;\n  }\n`;\nexport const InfoWrapper = styled.div`\n  display: grid;\n  z-index: 1;\n  height: 860px;\n  width: 100%;\n  max-width: 1100px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 0 24px;\n  justify-content: center;\n`;\nexport const InfoRow = styled.div`\n  display: grid;\n  grid-auto-columns: minmax(auto, 1fr);\n  align-items: center;\n  grid-template-areas: ${({ imgStart }) =>\n    imgStart ? `'col2 col1'` : `'col1 col2'`};\n\n  @media screen and (max-width: 768px) {\n    grid-template-areas: ${({ imgStart }) =>\n      imgStart ? `'col1' 'col2'` : `'col1 col1' 'col2 col2'`};\n  }\n`;\n\nexport const Column1 = styled.div`\n  margin-bottom: 15px;\n  padding: 0 15px;\n  grid-area: col1;\n`;\nexport const Column2 = styled.div`\n  margin-bottom: 10px;\n  padding: 0 15px;\n  grid-area: col2;\n`;\n\nexport const TextWrapper = styled.div`\n  max-width: 540px;\n  padding-top: 0;\n  padding-bottom: 60px;\n`;\n\nexport const TopLine = styled.p`\n  color: #01bf71;\n  font-size: 16px;\n  line-height: 16px;\n  font-weight: 700;\n  letter-spacing: 1.4px;\n  text-transform: uppercase;\n  margin-bottom: 16px;\n`;\n\nexport const Heading = styled.h1`\n  margin-bottom: 24px;\n  font-size: 48px;\n  line-height: 1.2;\n  font-weight: 300;\n\n  color: ${({ lightText }) => (lightText ? \"#f7f8fa\" : \"#010606\")};\n  @media screen and (max-width: 480px) {\n    font-size: 32px;\n  }\n`;\nexport const Subtitle = styled.p`\n  max-width: 440px;\n  margin-bottom: 35px;\n  font-size: 18px;\n  line-height: 24px;\n  color: ${({ darkText }) => (darkText ? \"#010606\" : \"#fff\")};\n`;\nexport const BtnWrap = styled.div`\n  display: ${({ btndisplay }) => (btndisplay ? \"flex\" : \"none\")};\n  justify-content: center;\n`;\n\nexport const ImgWrap = styled.div`\n  max-width: 555px;\n  height: 100%;\n  @media screen and (max-width: 480px) {\n    margin-top: -69px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  margin: 0 0 10px 0;\n  padding-right: 0;\n`;\n","import React from \"react\";\nimport { Button } from \"../ButtonHref\";\n\nimport {\n  InfoContainer,\n  InfoWrapper,\n  InfoRow,\n  Column1,\n  Column2,\n  TextWrapper,\n  TopLine,\n  Heading,\n  Subtitle,\n  BtnWrap,\n  ImgWrap,\n  Img,\n} from \"./InfoElements\";\nconst InfoSection = ({\n  lightbg,\n  id,\n  imgStart,\n  topLine,\n  lightText,\n  darkText,\n  primary,\n  dark,\n  dark2,\n  headline,\n  description,\n  buttonLabel,\n  img,\n  alt,\n  Hlink,\n  LinkPr,\n  LinkDesPr,\n  changeToggle,\n  btndisplay,\n}) => {\n  return (\n    <>\n      <InfoContainer lightbg={lightbg} id={id}>\n        <InfoWrapper>\n          <InfoRow imgStart={imgStart}>\n            <Column1>\n              <TextWrapper>\n                <TopLine>{topLine}</TopLine>\n                <Heading lightText={!lightbg}>{headline}</Heading>\n                <Subtitle darkText={lightbg}>{description}</Subtitle>\n                <BtnWrap btndisplay={btndisplay}>\n                  <Button primary=\"true\" dark=\"true\" lightbg={lightbg}>\n                    <a\n                      href={LinkPr}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"#fff\",\n                      }}\n                    >\n                      {LinkDesPr}\n                    </a>\n                    {/* <Button\n                    to=\"/deneme\"\n                    smooth={true}\n                    duration={500}\n                    spy={true}\n                    exact=\"true\"\n                    offset={-80}\n                    primary={primary ? 1 : 0}\n                    dark={dark ? 1 : 0}\n                    dark2={dark2 ? 1 : 0}\n                    lightbg={lightbg}\n                  >\n                    {buttonLabel} */}\n                  </Button>\n                </BtnWrap>\n              </TextWrapper>\n            </Column1>\n            <Column2>\n              <ImgWrap>\n                <Img src={img} alt={alt} onClick={changeToggle} />\n              </ImgWrap>\n            </Column2>\n          </InfoRow>\n        </InfoWrapper>\n      </InfoContainer>\n    </>\n  );\n};\n\nexport default InfoSection;\n","export default __webpack_public_path__ + \"static/media/mv1.0cee81bc.png\";","import styled from \"styled-components\";\n\nexport const InfoContainerM = styled.div`\n  color: #fff;\n  /* background: ${({ lightbg }) => (lightbg ? \"#f9f9f9\" : \"#010606\")}; */\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`\n      : `#000  `};\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Img2 = styled.img`\n  width: 100%;\n  height: auto;\n  margin: 0 0 10px 0;\n  padding-right: 0;\n`;\nexport const InfoWrapperM = styled.div`\n  display: grid;\n  z-index: 1;\n  height: 650px;\n  width: 100%;\n  max-width: 1100px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 0 24px;\n  justify-content: center;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\n\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst WeatherIcon = styled.div`\n  display: flex;\n  z-index: 0;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: ${({ lightbg }) => (lightbg ? \"#000\" : \"#8FEFFF\")};\n  @media screen and (max-width: 768px) {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media screen and (max-width: 1024px) {\n    font-size: 120px;\n  }\n  @media screen and (max-width: 1440px) {\n    font-size: 140px;\n  }\n`;\nconst ResultWeather = ({ weather, lightbg }) => {\n  let weatherIcon = null;\n  if (weather === \"Thunderstorm\") {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (weather === \"Drizzle\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (weather === \"Rain\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (weather === \"Snow\") {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (weather === \"Clear\") {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (weather === \"Clouds\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return <WeatherIcon lightbg={lightbg}>{weatherIcon}</WeatherIcon>;\n};\n\nexport default ResultWeather;\n","var _defs, _image, _image2, _image3, _image4, _text;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoading1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 150,\n    height: 150,\n    viewBox: \"0 0 1500 1500\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\n      .cls-1 {\\n        font-size: 120px;\\n        font-family: \\\"Segoe Script\\\";\\n      }\\n    \"))), _image || (_image = /*#__PURE__*/React.createElement(\"image\", {\n    x: 182,\n    y: 293,\n    width: 1182,\n    height: 849,\n    xlinkHref: \"data:img/png;base64,\"\n  })), _image2 || (_image2 = /*#__PURE__*/React.createElement(\"image\", {\n    id: \"space-png-transparent-13\",\n    y: 45,\n    width: 1791,\n    height: 1409,\n    xlinkHref: \"data:img/png;base64,\"\n  })), _image3 || (_image3 = /*#__PURE__*/React.createElement(\"image\", {\n    x: 242,\n    y: 538,\n    width: 864,\n    height: 657,\n    xlinkHref: \"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFYAAABCCAYAAADNESF6AAARkUlEQVR4nOWce4zl5V3GnzPnzDlz27O7s+zsLksXtrssyyKRIgWqNlDaUrVRU4OK1QYNtlatWjXG+IfRqrXGEKPRUtJG03hpbEEtQQpaiwhtESiFUmlZlr2zM7Mz7M595szMuZif+Xz14eWcuZ7VrXyTkzPnd3vf93mf7/V9f5N78uigVinfL+kmSRdIer+kvKS9kr662gf9f5bCKsf2a5L+0H53Sdok6a2SLpN06LUOaEjHCq+7XNIuSd/G70W+b5H0Nkk5SR+Gua950QoZe6ekn5H0j5J2SnpJ0hFJ+yUVmZwJSa+Hsb8o6U/PAbqbJf0Spmde0t2SDp6vs7gcsO+V9LP8/d0w9WuSOiVNSRrAHPRKeh3XvUnSpyWNtKF/ZSbwSSb3t+xcpim/wPedgH3eyFLO65cl/REAZp8TdD4zC1tQ/9SULMCo45LeJ2lc0vWS7uP+1ciHYGhN0u8B4lba7eXZVZzo0xzPGHyrpD2SHuD4n0j68v824K2A3Sfp31G/IUlnGcyuBMyGpDrfeQbnMgKrM3CuWKHqvhNmvpHfwzC3R9K/0s63S9rY5N4JnOvPS7rQjv+wpHtWjEobpJUpeD2gzgBOn6RLmgxCDFiAm+N7hnsyUF+UVJL0KUK1peK7ayT9Pbb7FCZnGg0YAdSttBFtztukVnCiU7QT4N4o6VmeMf5/CWyOgZ0AmHcwiEkY2sk1XTA4Dyur/O4C+Oz+T8D66wyQVvJ+QI1JO0w/eoyhWWTSjb2vWl/EhD5EP8umLW+HxbdJ+stzB+f/SCtg9zPrj8HeMgM8I2kb57pgZQbkHIMsMZAOBvxxSR8DjOVUsQ9Tk03CUcAZ53hmp/uZ1A6+c7SX/Z5l0qaYjP1cP4rd32dttJKLJF3KBH72XACbhzXPw5wqIdZpC3UmUbsygzsCOzaYU8lMyW9Kuh12/QcD/x0mKJVbAfYhwNmLpmyx6xzU6HuVv4vY3q2A0wuw42hdBv4YRKkmzvQDku5gLJl8RNI3JP2KpB+UdLIdwGaMe5i/X+aabhi4GZAHmF3BlLI5tWxQVQAYAJhpBl3k9080abcbL/489vz7yOrqTHCDNkpcK86l43CntRWWfh1g7+AZw0QdTwHauw1UERE1aOduNGbdwGZyTNK/AULGwhfoYDbbO2BuSI4YtmEOrJNBL3BNdv3fMsAMsKskPZO0+Tjfp8joNjEhY7RdYsK6zFbnlhhD9CUD5w30STiwzEzcBdh/JWk7YGdtXWxjOMs9/wTZPrIeYHOAcoxBTpNRZQ19LypWT6KAhqlpxvgCv3PcPwL7xwHmnyV9FNbsZkBPwNZ3M9ARTEcn5qePe2dwZrkm4V06jpBO+vgMWrTLzn0ATfoyfc9DqBHuyUzezZKuJqOcXiuwDWxTePqTqPpdfM8wwOh43e6tmBmow7IsVPomTL3dvPtvc81PAtqHcHSHaf8Ex7dhw8N2VgAmb5O3ElkA1G3mBBs880uMcw+g9sPmTFsPMMEfT0Dtxmk3n9UlMq8M9H+Q9DkavQ+gxaAayaCm6HAG+jAsK+JhL8cR1bjmGQa2D6C28oys9PhzmJs3cD5MT5lrdphDW461raTK8Q4+J+hzmLuzmKJOzlfo2/04s1HGvxt7/NBKgH0T6eMwNwnVfSMNF5oMJpKCEp2ZAcBF8vwdqHeEY4M8o0Z4tYnzmX37PKr3Fvqyh4mZxgRcQjFoPdKgb+EDPAz7Guf3AGiF/qfaHbHyONr4mJ9ML/4uSQ9aQyPY1Ks41mmqH+BGYhD3ZLZ0wSbhHbB3iGN9qJoYXJ5nFvl+O2anj3j0d2HLNahfZu9vgC1rlRztFWizik/JmPgIk7rBEpR5+nqI6w6gNZ+nFn1LCmzK2Lu5aJKBhZPqXGIAi9iaiPWCvbOoch8zuxKVrTaZ7E9z7x7CvdMw+8IWz2glqelK2/0S53dj1mbRpDmc6sOEms9y7GL6egEx+hF/YArsjTD2OOrWa4WWGassydQpQp7DdCZj2SyN7yAG7YUhy8kkKt8He6qsTKwUsKXAW+5el0VM4YWWFGUm4j2EnsuKV6puxLa9aFWtIYAZB9hIEXMWas0B/D5MRua8+pmYDp5VTAbTSnrRjsj+wpZWaWcaU1O1Ca+aU23WRiOJXFxyTe5dhBj9ZIizEOdaST/FNTdQrWspwdgywXsWxjyHHekAqDOowE1JwcM7IjMXq2XNclLjM8ezuyxJiMmtWdLioOYMvA6Lt11iktwpn8FpzUCuARzoGMnCrUxW5tQ/2KwcGo0sWtA8j225GVWumLFvBlhnYoNdLZerZrWSuG8abSnSxhygejuzVjb0hCUyv3pyPhgabRQ45n3tQ1t2E+eWeM5mQA3svofw8FUSjuI7mJ15bthuDLjGOpJLAGsVRzbWyVy/L/p42o4dJGTbSVXK242VjRoM67SaQwWQZpm0AcZZapKSj9D2VZjAUSY1+jOMQ50hkhFRwn9JMPaApaqz3HQ/SUEaXuUSFfSicwpOzZKCtbC3zzK1YO3LONcn+N1jfavC0mkmopCYjcjWRpI+pYSpUiv5KtocfmKSa45jMrNI6MfIyjKz8BvR8UA/NluUzBufJCNqtkQenazScNGADNXraGL3Uvu3GglHNkjefjMgPsDALwXoKEkOWAQTDrcHrdwCi13y1r8imV84xqg9Fy0Jmid2vd4m//fpzzPhvLJG/1jSD5HCZs7qp7G7taSalc5yBPl5BpDFgL0WfHfatenkrEVmbQXhHgL4UPXI83dhH/PY5Zz1I5cwvMK9UR5N+xWOM0+E1M19xwE30+4rGfMOfMKlwdgGRZAruOGELY80s5d1s2VFMwmd/M4nDFgvmC495PL30o/3AGwWX36BPuy1fpdM62Zt5eElQssJWBchZjjjlwCqg/Z2ct+T+KSreeYT1HWvJFvL+nJ7APsDFJ/7KQ1+lofVk0woOhtFjGYqn81clU/+lZi0JRSrM+iNtP0APuI6sqG55Frvwxw2erMlAGXAiGijh76PoQ2bbYImyMJ6bbF1intGIVU2qVsLLA1/xjrSQc2gmUpEma6YhDIhi1bcKLUIw9YqCzxvEfUdp0r2CH+/k6Wg7clYvF7cA3n6yOiiYjZhTipWJ97MRJzGBxV5Tj9afQzGb4XBTzJZGejDBWb6HpCPwsm7EqB6jKWxhBHq71lVsLu4TH1hLRJF5w4G8nXUcAgv/yAlve3mF9KsqtuAK2Aju5iE0y2W+J8CwDL3dmF2XkdbU9QPxvg7c6LlAot7F9HpI2yWeBfUrhAdXGKVrVgVLeJ5q1bXTIFup5TM0UTK+7jVZsuAHCvI0wDb36IPnbay0AtoJQvZehh7BdBHMSNFxj9IAaYOU0fNBj9dIDb7hjU4hh05ZQ8sYtPC7i4ykB10wldPHeh2M7bLfl9N+0P8HiWiyQb7nQz8LE4lDa3cIedMCxvY74OQ7SLq0Bmx/gWWRmr9ohWh5gF9DnI+2mxp5i6C30tQl22AHGWxCTzkszzsbeasYuDtArVVNJIjgvkEjjeqb8eoQhWxu1FI2WRZlyc49SbRy0bqAocY0w58zt8xiXvRkkEIWAHgMSY3A3cx/74P/mo6mBobJsZtNrdZVnaQZer9pHvBhg5zbu0SX1dbsE134tw+Jv8hWNMNMDX6dp3l+UP0v9f66XWNGEM8YxeAvWyZ1xfowwz4DAFmOLOzse7Xaum4wA2RSfWhYh38ndUPfpRrH6QTB1oUqlcrnoDIAvwaZmvR7PwA/uAPsKkx8WXbVDeNDQxzlmds3bbq4WQILSnA1pNgcCPbk75JX6K9RQCd8RJlK5Wt2qyEzXmBFO4KQD1Dyew2KuiyEtxaq1ouCzyv22oCBex+1AoeBqyoOE2jbTvpQ1THYtVhA/2etBqIA1q3/tfRgovA6TCRyFGwmeN72GoI//3MpdjVsMJyhCinaOQF1qL+muMR1pQS9V3LKqrfP4zdHjA7WkBDNrGtc4a8vosB1ohBYyfiWRj6KOeFxpWtzXpib4MYG/jOJvIvrKYyRPw6ZfXoV0zUUsDmLCAfsqWZv6Hz99q18e6BF1vWmmU1rPCRw57300akmJ146DfDyMuJKY8xucGy0wC7g9BsGo0LMKqmtYFFWukSIL6XSGQjO8jvTRZXXyHL2cMasx5VrBLvIiyQDmYD+nHsq+hkdl3DVl0nbMllJaBWbTdOhFMli5MFmGO2ES5S29tQ1y+yF/cgYdFu7Oksz4qtol2JCYg6bsESjDx930iWKpzizZijprKcKXCbOcOML1BX+Cgd9NgygOyzDpesndQxKWF2w6r9say+DbXvTvaC5VDtIcKf/ezDuoww7Hrs6TQ+oAvVnsSkbbP4e9Fqxw2eV7Vi0tNsfdqLNuxLNtG9Slbiwb34WyM6uJNZHGTnSCwqTtLZUUKUviagppKzeqmzusDnYgYelbNYKor08yskOGdh5i6c7HNo2yj3xxs/h20RcgtMXKDvBWtjGIe5i6L3YT4rkmZxbDNg6/b3beTqd2BnFshuhlHR2MaZb7I6m8aOvhN7OlkNcPFCT8Hy/FHaPQbAXfThK4RJVSsNDgJshG0T1p/YuNdtla1BTNgY9nVmpaBqFTGnG/P7aPQkXvIxgvFTHM/s4lsZeNirZquj8TyvhrXaI5A6wg6ynuMANAVjP2Urpo8Aeo3zVUzKuO1On+L6HjRx1lYhxjAdn0nW29oKrMtLfEKO4izK2KKs49daONNqvavD7GhfYqtDmi1xR1jUQwg1AHOPYEsn7P4hJi3CwUhryzxn0pZcypiGOuydwQTcvwaM1p0lyRzO9fZq6AY7l1siEcnbWzdKmJmzdwt67ZpIbzfCrkdg11GY5eHPFN8RUVSsFDpndYQoc5Y4N8JkHFvri3ntAPYWQi7Z3oQImRbNJjaLCGQpavr+mKyM56akE2C38bbkJwHzzBI7XtxHxORVrWAewMaxeVvPW5O0A9gsvPkzHNoNxrLYQdhhoYx7/YbFvOnxcCyxjp+uVPTC0F+HpcUmRe2lJHaeR+G8y0CPkKu6iue9StoB7Iepf74FRxBpY68lDjWLPZUsl+RtQLFZuWhs6rKY0ZfWi2Reh1apro1kEur2El4rxq9a2lE3LVIT7WQff2bwB7FdodJ5Y1yoly9C1szJBFPDoURFatLCpFHi0o+xdHLtKvucpqy1hKnrYqvaxNh+4r9HYVg2+3NWOJkC5BlA7TW7WTAGRQIwZsF7qHisEkzhWCoAfAGF9k/ykt56GLcaU7KstAPYBVZLexlwlhENsvZzLcH3vG3k2ADwC7ZvttO0p0yM+jym5JQBW7WicoXg/88l/QhFmFX/H5ZzJes1BUVS16cAIspvo6SUczizk1bjnQHIspUZw8FFbeEA13zOXio+BMhjsPYQDuwB3rwZPV9AVZuq/VOW7vXDzh5AfxoQNgPgZcmLFBFXzvJ7i5UFr6QG8EXqEf0kJlPUiA9jc2faYRPbLesFdtFy7AibMpbGS3GPA+Y4JqIPMCIWPQrTxT2j9Ck2VlzIouVpfo9wz1GunW2nJ2+ntMPG5myBbRKmBmMjqxmkbjrPSxThhCYxEzsBKv6+idz/OHtQT/EZAeQp2N6OJaBzIu1KaRuAO2uZzAFUeBSGPgeDj+OMxvgepMa5FeYP85zNAJnDHh9hs955q/4u7QBWVt+MmuYZgKiZxz8GMC9b6DVC2DQMU+NflAzi5ctcF6+AxuRV2tTvcybtAlZWiY8YNf6L0XZ+j9ob1tOWkwtWnrFlnHHbyp6zzcTzfNq5d+GcSDuBjdAtAyzqq/FPIWK1NNi6YOGVrPKUs2XlCoCWrGY7bbscz2tpJ7ANK+lNWd4/aguS01YAb/WMSCunuD5qAxWLk9uaJZ0LaTewsRMmQqouY5jn48tJ3RhcN21ofCuwVW0GNiTAiw0T/g9yViL+nzl8Gdo3s5330m5gg1E5c2L5dVSMYjJ8N/lrkrHOKP9eKxj1BNxvGWk3sL6jJABxcF4bIuk/AS9lHmTK79JUAAAAAElFTkSuQmCC\"\n  })), _image4 || (_image4 = /*#__PURE__*/React.createElement(\"image\", {\n    x: 302,\n    y: 514,\n    width: 1128,\n    height: 711,\n    xlinkHref: \"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAAHEAAABHCAYAAAAwXahgAAAW8ElEQVR4nO2dC5CdZXnHn3PfW7LZXGFDLsvNQIjQhJuKt4pKa8Vgp1jsdGxp1em0ndZ2WlqnRVrbau/WqlhLW6j2glriZWiBqlgjFJFgEAgglySbTbKb7G52s7ez5/Z1vs7vGf+8c26bnJMQ4Jk5c/ac7zvf977P/7m/z/ttIooiexHRW83siJk9bGZrzGy/mRWY3lVm9ltmdtjM/tTMvvcCm/YiM4vBmF7oD5PtGc8JpYyZvcPMrjGzfzKz+83sy2b2jJldxkD+0sz+y8x+1MxebWY/cgIHuNHMPmxmv21mffJ9DNq7zewiM/sdM5sws5/iWO+C7hBr4in++kT0Q5qJomgkiqLhKIrKURR9JoqiWzk6EUXRX0RR9IooirInaM5XR1E0KuO7J4qiczj2Pr7byZhjujeKoh9EUbQriqI1zd7nVDen15vZP5hZkc9jZnbUzNbxOcf7V8zsj8zsuyd4fG9F8y8xs9ebWZeZ7TazrWb2q2b2s2Z20Mzm0dJONNRwC7GWDja6Sbr982g5pfAdFUxmTA/w/UUwoWRmU4D4KOb18ZMw1m9w/x1mdsjMsmb2BjN7xMwm8X/9ABub0w4zGzGzVYD6imZAPJV8Yjypv2Liv4Af/DyatxTgXBNzSPI3zSxvZufBmBNNsYU4gCX4OcBMMIYc/M8D5DmMfwea+R3G35BOBU1MonW/Z2Yf4LuPo42x+YkIHuKJz5rZvUSmy5D2PUh6+SSN/2Iz62E8H8Vi7Aa4DMI3Y2ZzaOs084ij6q+Z2W1m9o/1bnAqgDhgZo9hauIJbzezbjO7lIkWkeocx2PJ3gXz4s87YdqBNo5xpZndiDDFQN0tx/7OzDZjQtOM6XQZczz+Yb7rBtj/NbMLzWw1AnnKgrgGH9cPgJP4jQGk2ckleQxpP8PMnsRPLmKOjxDsvNfMNuAjb0PDDW2PeC2BsTNNjjMG6D/MbD2fL0Fg3ohGpRl7bDX2mtkK5lPhvhnGGb9fYGZrzWxU0owesUYfMbMrEORPmdlQfMILMTqNJ/l2Iri3YyZzmMM5fN4SIr3Y700zwX1mthgtHGLy8bl34F++ZWavRXuz3Os9ZvbPZvYlBGQfZvuDMKwZeh35XYExd+N/D1JsOAMAO9C4Tsaekei5gjBmEZ4E5xxFEO6ELz/O+bEQ32NmPxmf324Q4wmdaWavMbNxM7uPgR5FcwyNu5oqS2xGLudd0wUPwOLBPg2DthCBHoAhc0jwDiS7gAbuJsn/Y0xtmXEZwN6KuTrKNVZxjyRjuraJea7DHMZzeTMv18wIUOYZU5e4gIRcw4W0BOAJOZ7leJkxfYHrxu9D7QQxg9pfJt+5Vn0JiTubSW3iuDP99TD6CIB0McEsUjiIUMSDHxWBiFOOZ5n8dwDki0j6ISLcJOPoRLpNTNso9+gQbf0aoDRD6xDU1YzNeE9KYOV/p+W4g1Xgc07GZPDhPo5/3cy+zXxizW6LTzwPc7c8ANDEfGwNvo/t+12UprYCcBSkBUlMXi9+IyLyXM15f49v6gOkaxhDicAjAUgr0LoIwegUZi0VhrrAXQmI/y1j2YigPYL5PsL3r2U8BggprpOC137tlICs5IITBelf7N+/amb/ivtI6O9bDeKH8SnDEhjMinSV5eYJATWCGT9jZu8zsxsY2yyaNYCPO8x11/KKtdSDgmthbgJQXRhcA/rwmRnAKsgxl/qkaEZWgIwjzNsJmOLcdBt5nRH9bkFwPT2Y4bfLuFaR+5rMvR5VELAeLMp/ooHTwq8fXqxF5jRm+IcA0JhAAn8VoRHdMM39gTNrDE15ioLwr+MXDUbfj3R3oTVpADmNZDgiYvNobg6GpZpglgmQHvFGMrZEIHQ7EdCrAMp96zYs0DyBTJp5pgC3LELSiCoSfE3hXnrx9R/EXz+PWgXin5jZ7wKIa55XUrIMIhPYf2dgHmbE5/8AbTqMP3UTOE3QEGEeY0DPMrN/Z1LnY7rPp1RlokXNkDLBxxeOtcQ10yxjTZLLncY8UnJeSiLOTB3wwnuE35f4rBbzz83sD3XJqhUgZjEzA0SNHnRcSI5nADUFqCkxqz44NzfzAJnl+N38dhztO0QasIRz43KW54k/ZmZ/zXkrA2aoNh0r+bWepA67BgCXYKadSsF9M8dx/yLCkA1++wCF9f+/bit84lLM5izF3sW8BjFtfZiHCTTDfU23TM4Bjm3/zWjTGq6xAhN2O0AtIuJ00/1ZtPJThPV5Xtk6WtWIFAQPMvz3GwhkvLCgUahJ0KLad6zC48FQGUHtQqAvJ/+9xloE4iYG/QCa4pMblxqgiXnxKkaaY+7j3kXQkMT3LAac73NeHOxch7OPtfynzew3AewnAHBMEmllZLOFftWYKABfAd2M4FWEhwmpAPnfiePUfr33GLxYjsBvJX74WCtAnMDpjiGhJSa6BG17Gsavg+FetN7H+1qucxkgVvCJs2hsXH35MzP7Jbnn+0VCbwBsk9RhuUy+WSaGTA+BnGFuS0RAl8vvI7nODLnmQn1yPf84wOeHEOpzcR+jrfCJHVRkXAMGqF6s5LuSJPVJpGgIgDykH+D8aRZLb8cUO30VbQtBidOPtCwCH4/vi4K/HdA873Mwbzl/V6QvphLUc8tigo9nTBXR9oiE/yAp1Fqsz22tALEXINNMcLWY1BxF7NOZWD/+cye+Lh7MZ/B9N0ht8BnM9FKKAF7RKXGdrKQGrcp1wyCoxOc0mjXBa7kUITx69ApMSsZYLSqtl76E47DAhMfm+xYEfpb7xGuqf9sKBkyhQUnMzCRBSRkgj/B3gQrLHtKGXWL+9vOd09msC66VCNcj2qww93ipGhP977QISjzHByVom5YCewKfPsLnTo6lgpqvX7sgFZyKaLG7hwoCkBDfOkVUnIZ/k1zzIWsRI9yZl5GOUQZRRGKmMJUZAp/n8HmjmMM4yvocoBqTTEjC75QKTFarKAoYZmIKPfiaQhtX4vsHyUm9rWKTxAEZgA7zYZ/XLLFCUgK7EvwqIgCqpT7vRyXi91WaeLzfbkcBPMUgl5FH9Ui0OMKkZ/i7l5xrNZNLcO6JXufUoKQiOWyR8XVh4vfBxA2sF1YAcpy8zcddwrqkmL/3k2blnF6+K0laUkSTF0sU7/XUCc7dhpXazrEj7QLR88Ee/naGTBAozHLufUx+qk6QUIvCIKeZSDSqUQJzU50SzethrBP48Zs5fqNE1OlgCcupQnHc1wi70Z4s7mEG31bCPPbIArZbBO/gcyEoECNMcOwWynDHVLHp5DVe5VhC7HsyKHB7U5AWld+z0JsLVQOtWh00IVKuv0mKX/IVjSJa54zqkDTiI6Qy1wKcBzBTBG5zCOdpsvbXRdVpr1Re1qOFaRlnBq1czDmjmO4SvnCUMV4I+O6v406AwWbN1maizH+hXrkFHxa3OXwyYGxZmJUUKarIeVcB4DQCkQquYU1oVa3j5cA8laUhqSK9Ohm5zjzfpRGwleS33XLd3xBTOIt/moTpe5hHv0SOXorbzvrfJsY1RsCXIULvQktdC5+hQnUB2j3ImuZ3WRK7EiG7loT/481q4g6A/Dp9k8r0TTQyVSPvDemmRJSg6nAO5qBau3pYV7UqWlcR7dbApNp1JoiQe6WmWg7mMMt3HVwzRfDVxct9ZVLm5An/In67m3n1EMAV0c4yKzw70KJ+wNlAFH+Yc5bxuwMytxTCtA2BMaxBrFBvI3/e1kgT19FlvZnPb5TEd55obAudzr20Emqq4Nr3N/SKhsyrBXypiXMr4sdCACtSaJ/lmt2yCpEIhKUiQdUolqNfBCQl4b8zN+wKWAGQ0whLBQE6nZTpDolO53gdkPE/R+A0LuZyHwHSrET8fo8HOFbXJ25Ew7wJ9xKJHJ/AOV+GJCUY6J1UVpTOwAFnaKBNiQmb43OnDLwSmFRd0kkLuMkqprcME7oAzZePujju0rxIgHSzGgmTD5D75TielXKiClZFxhGJcGelQvUHZnYT5/fiM1cxvj7An0Z4DmNu5xjLlIw5Kfx5HtUDcRO1zLVcdARz0y8NuSWA9EHH7/9GbXMquF4cGLzTzP4HU5Ji8KsRmBIBg1uHirQq5sWsuWb0SVUlI0nxLNJvwlxNuuck1C8GwZjSU1xvI0JWq6AdSQ7o6YAHOcsoId6I0O8HyPXcswMwZ5mnd+/lA8Gs1Gt+VnN6NVK0n8E/AVirGExOBtvBjTtl5d0XgK/j2C8G97oX83IXE7iU37+BSZWQxB7ZT3FIosZDgLGS+wxLcODgzwaSquUr/9wln3X+8wEQfUELSXg9BTMdaGhOGP8uXo/SI7ONv/uledhEiHUOSQnSapJr4qfRngNISoJC61kMxMtq01ywWyT+MSova2X5aJ4qe73NIGdybgzmq3Dyk4C2nHuNM4lR7rdeemXyvHcwxvUSkeaqMFrrln5eVsxqXqoj5SothRb83qocr0gUnJQ2i6yc801iiw4Etij39BRsQRRL0K8B4G7RpsOyvONqn5cAoVsiyzNhYDer8k9g9/sExKSsgz3LwIfE13n7YhJnnhBp9uJzJ1bC9zB0U5qbQRsT8rtp0TqrYpoSQbJfEt9XqWJeQ9CqrTdaYNpLjGWE6/kiwIWs+twXrD9GjTSuFqWJMG9FxTeT/82hIRtgfh+geThdFPORk7/PheF9NC89ArOvZzPMaq7/IVorRkTiD6N5R0QTuoPocJ5r9JNHxZZji0Sek8zJgxpNQ4pBEKOBUVYYmQjMpgtv2K1WLU9NyMqGm+E0acIhov3npE/WxKceM6VZWBxAom8GwJVo5quRdte6Wh1bKkFLeF+H5j0q4fq3YHwP55SZXEH2J8yLH8xiMiM5Jy8mKtbas6XRaobzc4EvywuIWtarVeFRUOakCBDOtRYfPHjaz/yOkBJs4fNuzqscq/Yp1YtO30SQ8hrMY1ZMXLqOvzHMWQpzNkKCv5vI9Um+iyRxNhjsyXZRJugakOR6K4icNxJ0vQXpn8AvL5Pqi5MWk8sBaEXRrESV3LQi6UWjvNqZWQTAuxDKpcw/jzX7HG6nJVRvUHvo+++EOedKYpwJztWlnIRsWR6nLPfJGrXWCkz3AKkkob8HGbPi6/LS3faYbJH+HhrYKQVuTQm65J4KUkLW7qyGViQBP6y9hvPw+/mi9QAbbXYguBV4OhF0LRw31WsgepaQ+HZypjHO75AJh4mnrskNEui8n1rpm+lQ65Dz38TC5nZM7esk5C6LtmrD05yUyeI644No/jmyZyNRLzmuMuZqf4eUqQNggnFPBoqxWAKtKUzpY3xu2XJbowtdQM1zawNzopGVv6/E3OUIZHrwjd8gt/wKW9cMICbEVzqVgsjQF5rHZdfTQ2KG3xFcox2LyDpnpZy0ZHhwk2W838cveldDvpUDqQfiJ8zsl+VzNa3TkHuec9x0dUgJyzB1B2mzuwnNPEzg82m2sw0F91BGeXSaIdGvEChskIDIxJemqpjJWppWzUxWq/bUyhsTov3aypgm/x1l7kePJQ9sRLVAfBsAVljZXhTst1OGuNRpp7MDXpA8zru2/YE7d/P4km1yjVqUkMrFHJrom3dmRXB85WCRfE4KsLrrqBkzGkklR8tzRfmNFtp9lX6CuZ+DYO6DDzOtiEZDqgbiaTw+6378YIaE3oJykK4C7GMSA3JeARPTz4SPIKXLCES+SPWiEYBOfu8YpFeydTvW5DkS5ww55Gbxzd7/6X44TCmsyvcl2Qxaku10fg1PV7plP0S3VJe6pCO+Q+41c7z5YC2qBuL5rEQ/DcPPxCGfG4T/KQHAJTQvkdweaVnwXUp7CHZmuO5SgGhEkUi5oWl34A93s/1rI0WFVwkQbt68RFcQADRXnBeQ/LEl3rU2Ke2WFUziYjGzzzGXLoLBMr/3Mp4L80wdjW8piN6R9nmWkJbD9JU8jaIg++7896MwtZ8JD0ua0YWvW4ZJ9WfNpCV3Wwh53vgAvtS3BRifJwBtDGYulof+LAu6CFyztdY5JqDnAXEiWNGf5Xu3LN4A5m2KQwjWCLx4lvdjLqstFERDC2fwYTOyy3YXptZ3v84AsrbnTfP7i6RXZR8a+DoAeARpfg6ByUha0Ygqwoyjwbl5/OxbOJbiuiUE6qCsevRJM9K8jNu70rzX5mEx0ya9NUPcz/k3CL/msCxDpD+7mKdvIz8h5rQoTvsZTMy8tMv5kx+GkdzdlL386YGr8A2Pw7Qp6aP0FekCZnA82DncLNU7fycPUVgtlZss9x3EjKaxMklZHUnCfL/2EHP38tmZzG2PmEdvhJpBYEYQhMexCodkVSK7AN+/YKplzublcR2RbBkbBJhBeb7KBn7j1Zbz2N/ex+DvpCIzzbHL+f6WGlWc46FJSl3+mK0prIWb3AwBW4o5HaA8tggwvLF3LxammyBsgnz5AK81zO8A9+wB4GF4sxetLTao9LQVxII0+J6GRA4ioQep4FzFMpb3i5alLHcpmlDAzBziWmfxrNF3Upe9iRSjVZSAscOYcWd4F0HUmDzIdivn7UcAvYQ3yBwXcXwYLfVdXXulBup9tJMIwARgeoeBm89Eu/yhNSiAL0GDOmFAhCb9ClWXi+m78YXPeZG8rKyga2lvhoDAn9cSS/nPt8FXJGXNcxnvXbJYHLHaXqQMVsRcTkmqkJYHKBzkmgOAWkCrPQ3xQGgYYZ0Wn9t2CkH09gRd4zqd5aqzYf4VssamK9Z5Br+khoa7r42PfYx2jQIC0Q4QPe1xIfSGXW9KWkcANiwmTwsZRwC9E2D2IRCRmFDvdPd+oQlpzU8GZcO2kYLYw1OXrqMgvR1Tt1fa7XcCqud/aut95UE1T9sZHPgc/avXtsEnVgPTtxG4Zahg6vIAmZFdRu7nvUPOu+vmpHXEV1l8z2BWih9FAe5YgrZjIgUxLrP9PgM5g+8Os49+I/6sr0o/qA60VpXfzZTvnl1KYPPeNs8vKTVNtzBq4nyhtyhlvYosKucAVF2FR6YF0XYvRnhprm53WqtJQVzFAw/6eTJSjkhyI8cLspKhGlgJtC8kj1qP0oruDcdGdahli6MNKFNleaoiJt7kmBevXVjV3CaD8mN0osxmLaoW2LhkLaUR+EpW9zvwK91NX/35YE+Q/E4S9p/NUtR9bZ3h8ylsy6hHLpipQGC11KggnjSqFoA4quM486LkjN5rU83/VSPtIXmYv8dZ6c4A5IkEcSEmTrU1XSVNCLvVTxo1AsEfBvsEWuTn+3LMtBSVa7U2uO94JT52H3njowt4MOzJppLsD1E66QBagwJ0guL3lyljXRysx3mu5E+S6JadrrpbKcPkfZ/fFBGvt1acKvSCAKwaNQKxAMNTVD+GCMu90t8r2uZ9L7oBJcNrhE63XWjfs7Lb52VqI4iVoDj8FLmjb9vy5p8lElbnREvn5Nk2K3jfRfdXod1F4ZcSNbPJ1HcgnYtf+wDpiG+G7JT8qFO6zdIIQK/kY7vZIbz9pc74VlIjEJNS7VjOksy7qaH6ml2OSkda6oyrKDwflP+8spZqT4GHp7c70X/JUDMgpuRJGEtZ4rlCHjbuPSyR7JrqBPQc7XoPUki4nur/cspuX3ipA9AKatQeoSvp3gb4OFHoeilp5fF5s7Lnwc3rLlbz7yG92Mgjoi95GcTWULM9Lr7bZ0Z2AB+Vp2LofgWTnVKT/GYR0ehnAS99kv4B14uSmn16hgcqGQlikkHd0Xsqc2Ji50Sbp6UvpVNM78t0nLSQhxGlZNnFn0Wma4oFKXanBWhfkilXWUV4mVpAC32ilO+GqgQV/oSAa1W0VOuQL4h644uJjufZbvqox1oUPjLkpC7ZvFjpRPzDL30Cb6NtZi/TQsnM/g+temc24m2dnQAAAABJRU5ErkJggg==\"\n  })), _text || (_text = /*#__PURE__*/React.createElement(\"text\", {\n    id: \"Loading\",\n    className: \"cls-1\",\n    x: 483.292,\n    y: 774\n  }, \"Loading\")));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoading1);\nexport default __webpack_public_path__ + \"static/media/loading1.21a190d5.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport ResultWeather from \"./ResultWeather\";\nimport Globe from \"./Globe\";\n\nconst LocationContainer = styled.div`\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`\n      : `#000`};\n  z-index: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 30 px;\n  height: 220px;\n  position: relative;\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 0;\n  }\n`;\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n  /* background: linear-gradient(45deg, #000 30%, #000608 60%); */\n  border-radius: 20px 10px;\n`;\nexport const LocationContent = styled.div`\n  max-width: 1200px;\n  position: absolute;\n  padding: 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const LocationH1 = styled.h1`\n  color: ${({ lightbg }) => (lightbg ? \"#000\" : \"#8FEFFF\")};\n  font-size: 48px;\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n    font-size: 40px;\n  }\n  @media screen and (max-width: 480) {\n    font-size: 32px;\n  }\n`;\nconst Location = ({ lightbg }) => {\n  const [lat, setLat] = useState(0);\n  const [lng, setLng] = useState(0);\n  const [status, setStatus] = useState(false);\n  const [weather, setWeather] = useState({ temp: null, weatherStatus: null });\n\n  const getStateWeather = () => {\n    console.log(\"api\" + status);\n    let one =\n      \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n      lat +\n      \"&lon=\" +\n      lng +\n      \"&exclude=daily&appid=0f2732bccb4571c4ff0057486c17a930\";\n    axios.get(one).then((res) => {\n      const datas = res.data.current.weather[0].main;\n      console.log(datas);\n      console.log(\"temp\" + res.data.current.temp);\n\n      setWeather((prevState) => ({\n        ...prevState,\n        weatherStatus: datas,\n        temp: res.data.current.temp,\n      }));\n      setStatus(true);\n    });\n  };\n\n  const getLocation = () => {\n    console.log(\"loc\" + status);\n    if (!navigator.geolocation) {\n      setStatus(false);\n    } else {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setLat(position.coords.latitude);\n          setLng(position.coords.longitude);\n\n          setTimeout(getStateWeather, 1000);\n        },\n        () => {\n          setStatus(false);\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"eff\" + status);\n    getLocation();\n  }, []);\n\n  return (\n    <>\n      {console.log(\"return\" + status)}\n      {status ? (\n        <LocationContainer lightbg={lightbg}>\n          {status}\n          <LocationContent>\n            <ResultWeather\n              weather={weather.weatherStatus}\n              lightbg={lightbg}\n            ></ResultWeather>\n\n            <ForecastWrapper>\n              <LocationH1 lightbg={lightbg}>\n                {`°` + Math.floor(weather.temp) / 10}\n              </LocationH1>\n            </ForecastWrapper>\n          </LocationContent>\n        </LocationContainer>\n      ) : (\n        <LocationContainer>\n          <LocationContent>\n            <LocationH1>\n              {/* <p>LOADING...{status}</p> */}\n              <Globe className=\"App-logo\"></Globe>\n            </LocationH1>\n          </LocationContent>\n        </LocationContainer>\n      )}\n    </>\n  );\n};\n\nexport default Location;\n","export default __webpack_public_path__ + \"static/media/mv2.082e2e1a.webp\";","export default __webpack_public_path__ + \"static/media/mv4.9420b6e3.png\";","import styled from \"styled-components\";\n\nexport const InfoContainerM = styled.div`\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`\n      : `#000  `};\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Img2 = styled.img`\n  top: 50%;\n  left: 50%;\n  top: 0px;\n  position: fixed;\n  display: ${({ imageState2 }) => (imageState2 ? \"inline\" : \"none\")};\n  width: 50%;\n  z-index: -1;\n  left: 435px;\n`;\nexport const InfoWrapperM = styled.div`\n  display: grid;\n  z-index: 1;\n  height: 350px;\n  width: 100%;\n  max-width: 1100px;\n  margin-right: auto;\n  margin-left: auto;\n\n  justify-content: center;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nexport const SliderImageDiv = styled.div``;\nexport const SliderImageMainDiv2 = styled.div`\n  height: 700px;\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n  }\n`;\nexport const SliderImageDiv2 = styled.div`\n  /* place-self: center; */\n\n  text-align: center;\n  margin-right: auto;\n  margin-left: auto;\n  width: 50%;\n  @media screen and (max-width: 768px) {\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  position: relative;\n  height: 100%;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: auto;\n  z-index: 4;\n  opacity: ${({ imageState }) => (imageState ? \"1\" : \"0.7\")};\n`;\n","export default __webpack_public_path__ + \"static/media/mv1.018d7b31.webp\";","import React, { useEffect, useState } from \"react\";\n\nimport imgPath2 from \"../../images/mv1.png\";\nimport webpPath1 from \"../../images/mv2.webp\";\nimport imgPath1 from \"../../images/mv4.png\";\nimport webpPath2 from \"../../images/mv1.webp\";\nimport {\n  SliderImageDiv2,\n  SliderImageDiv,\n  ImgWrap,\n  InfoWrapperM,\n  Img2,\n  InfoContainerM,\n  Img,\n  SliderImageMainDiv2,\n} from \"./ImageElements\";\n\nconst SliderImageBack = ({ lightbg }) => {\n  const [imageState, setImage] = useState(false);\n  const [imageState2, setImage2] = useState(false);\n  const changeStatuofImg1 = () => {\n    if (window.scrollY <= 820) {\n      setImage(false);\n      console.log(\"Ptrue\" + imageState);\n    } else {\n      console.log(\"Pfalse\" + imageState);\n      setImage(true);\n    }\n  };\n\n  const changeStatuofImg2 = () => {\n    if (window.scrollY <= 950) {\n      setImage2(true);\n      console.log(\"Ptrue\" + imageState2);\n    } else {\n      console.log(\"Pfalse\" + imageState2);\n      setImage2(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeStatuofImg1);\n    window.addEventListener(\"scroll\", changeStatuofImg2);\n  }, []);\n\n  return (\n    <>\n      {/* <InfoContainerM >\n        <InfoWrapperM></InfoWrapperM>\n        <SliderImageDiv imageState={imageState}>\n    \n     \n        </SliderImageDiv>\n      </InfoContainerM> */}\n      <InfoContainerM lightbg={lightbg}>\n        <SliderImageMainDiv2>\n          <SliderImageDiv2 imageState2={imageState2}>\n            <ImgWrap imageState2={imageState2}>\n              <SliderImageDiv>\n                <Img2\n                  src={imgPath2}\n                  imageState2={imageState2}\n                  alt=\"I'm a webp image\"\n                />\n              </SliderImageDiv>\n              <Img\n                src={imgPath1}\n                imageState={imageState}\n                alt=\"I'm a webp image\"\n              />\n            </ImgWrap>\n          </SliderImageDiv2>\n        </SliderImageMainDiv2>\n      </InfoContainerM>\n    </>\n  );\n};\n\nexport default SliderImageBack;\n","export default __webpack_public_path__ + \"static/media/paticloud9.ccfdcf96.png\";","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport PatiSvg from \"../images/paticloud9.png\";\n\nconst Pati = styled.div`\n  position: absolute;\n\n  top: 200px;\n  right: 0px;\n  z-index: 1;\n  display: ${({ patiState }) => (patiState ? \"none\" : \"flex\")};\n  position: ${({ patiState }) => (patiState ? \"absolute\" : \"fixed\")};\n\n  @media screen and (max-width: 768px) {\n  }\n`;\nexport const ImgWrap = styled.div`\n  max-width: 555px;\n  height: 100%;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  margin: 0 0 10px 0;\n  padding-right: 0;\n  opacity: ${({ patiState }) => (patiState ? \"1\" : \"0.6\")};\n`;\n\nconst Paticart = () => {\n  const [patiState, setPati] = useState(false);\n\n  const changeStatuofPati = () => {\n    if (window.scrollY <= 2700) {\n      setPati(true);\n      console.log(\"Ptrue\" + patiState);\n    } else {\n      console.log(\"Pfalse\" + patiState);\n      setPati(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeStatuofPati);\n    AOS.init({});\n  }, []);\n\n  return (\n    <>\n      {patiState ? (\n        <></>\n      ) : (\n        <Pati\n          patiState={patiState}\n          data-aos=\"fade-left\"\n          data-aos-anchor=\"#example-anchor\"\n          data-aos-offset=\"500\"\n          data-aos-duration=\"1200\"\n        >\n          <Img src={PatiSvg} patiState={patiState}></Img>\n        </Pati>\n      )}\n    </>\n  );\n};\n\nexport default Paticart;\n","export const homeObjOne = {\n  id: \"about\",\n\n  lightText: false,\n  lightTextDesc: true,\n  topLine: \"Who am I?\",\n  headline: \"Jr. Front end Developer\",\n  description: \"I am IT guy who wants to be an architect.\",\n  buttonLabel: \"Get Started\",\n  imgStart: false,\n  img: require(\"../../images/primary5.svg\").default,\n  alt: \"Pati\",\n  dark: true,\n  primary: true,\n  darkText: true,\n  LinkPr: \"/gallery\",\n  btndisplay: true,\n  LinkDesPr: \"Learn more\",\n};\nexport const homeObjTwo = {\n  id: \"contact\",\n  LinkPr: \"/portfolios\",\n  LinkDesPr: \"See more\",\n  lightText: false,\n  lightTextDesc: true,\n  topLine: \"Featured Portfolio\",\n  headline: \"My most important Portfolio is petting my CAT\",\n  description:\n    \"She is four years old British Shorthair. Her name is PAW. If you want to learn more information about her, I would like to send billions adorable pictures \",\n  buttonLabel: \"Others\",\n  imgStart: true,\n  img: require(\"../../images/portfolio1.svg\").default,\n  alt: \"Pati\",\n  dark: true,\n  primary: true,\n  darkText: true,\n  btndisplay: true,\n};\n\nexport const homeObjThree = {\n  id: \"elixir\",\n  LinkPr: \"/elixirapp.live\",\n  LinkDesPr: \"Go to Elixir\",\n  lightText: false,\n  lightTextDesc: true,\n  topLine: \"Elixir\",\n  headline: \"Elixir is an automated smart irrigation and agriculture system\",\n  description:\n    \" Elixir provides agricultural support to the user by collecting and analyzing on-site data along with the analysis of third-party forecast data. The users can see recommendations, risks and conditions regarding their farm along with the visualizations of the collected on-site and forecast data. The users can see how much compatible their farm location is with a specific type of crop. Elixir allows automatic irrigation, irrigation scheduling and the manual control of irrigation. The automatic irrigation option creates an irrigation schedule based on the collected data without any kind of user interaction. \",\n  buttonLabel: \"Others\",\n  imgStart: true,\n  img: require(\"../../images/elixirposter.jpg\").default,\n  alt: \"Elixir\",\n  dark: true,\n  primary: true,\n  darkText: true,\n  btndisplay: true,\n};\n\nexport const homeObjFour = {\n  id: \"trading\",\n  LinkPr: \"\",\n  LinkDesPr: \"Go to Elixir\",\n  lightText: false,\n  lightTextDesc: true,\n  topLine: \"Trading Bot\",\n  headline:\n    \"The system can trade the specific strategy which can be changing via UI\",\n  description:\n    \"It uses backtrader, matlab, pandas to calculate correct strategy considering past data. After that it can use that strategy to buy and sold coin using binance websocket and API\",\n  buttonLabel: \"Others\",\n  imgStart: false,\n  img: require(\"../../images/bot.png\").default,\n  alt: \"Bot\",\n  dark: true,\n  primary: true,\n  darkText: true,\n  btndisplay: false,\n};\n\nexport const homeObjFive = {\n  id: \"portfolio\",\n  LinkPr: \"\",\n  LinkDesPr: \"Go to GitHub\",\n  lightText: false,\n  lightTextDesc: true,\n  topLine: \"Portfolio\",\n  headline: \"Basic Portfolio Web Site\",\n  description:\n    \"It uses React Js. I create this site in order to share these GitHub link. \",\n  buttonLabel: \"Others\",\n  imgStart: false,\n  img: require(\"../../images/portweb.png\").default,\n  alt: \"Bot\",\n  dark: true,\n  primary: true,\n  darkText: true,\n  btndisplay: false,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../Components/Sidebar\";\nimport Navbar from \"../Components/Navbar\";\nimport HeroSection from \"../Components/HeroSection\";\nimport Content from \"./Content\";\nimport Footer from \"../Components/Footer\";\nimport GalaryRew from \"../Components/Galary/GalaryRew\";\nimport InfoSection from \"../Components/InfoSection\";\nimport ImagesShadow from \"../Components/ImagesShadow\";\nimport Location from \"../Components/Location\";\nimport Slide from \"../Components/Slide\";\nimport SliderImageBack from \"../Components/SliderImageBack\";\nimport Paticart from \"../Components/Paticart\";\nimport { homeObjOne, homeObjTwo } from \"../Components/InfoSection/Data\";\nconst Home = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const [isContact, setContact] = useState(false);\n\n  const Contacttoggle = () => {\n    setContact(!isContact);\n  };\n  const [lightbg, setLight] = useState();\n\n  const LightToggle = () => {\n    setLight(!lightbg);\n    localStorage.setItem(\"bgStatus\", lightbg);\n  };\n  useEffect(() => {\n    localStorage.getItem(\"bgStatus\", lightbg);\n    if (lightbg == null) {\n      setLight(true);\n    } else if (lightbg === \"true\") {\n      setLight(true);\n    } else {\n      setLight(false);\n    }\n  }, []);\n  return (\n    <>\n      <Sidebar isOpen={isOpen} toggle={toggle} />\n      <Navbar toggle={toggle} LightToggle={LightToggle} lightbg={lightbg} />\n      <HeroSection\n        isContact={isContact}\n        Contacttoggle={Contacttoggle}\n        lightbg={lightbg}\n      ></HeroSection>\n      {/* <ImagesShadow lightbg={lightbg}></ImagesShadow> */}\n      <SliderImageBack lightbg={lightbg}></SliderImageBack>\n      <InfoSection {...homeObjOne} lightbg={lightbg}></InfoSection>\n      <Slide lightbg={lightbg} />\n      <InfoSection {...homeObjTwo} lightbg={lightbg}></InfoSection>\n      {/* <GalaryRew /> */}\n      <Paticart />\n      {/* <Location lightbg /> */}\n      {/* <Globe className=\"App-logo\" /> */}\n\n      <Footer lightbg={lightbg} />\n    </>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/elixir_logo_320.8e5a6f7f.png\";","import styled from \"styled-components\";\nimport { Link as LinkR } from \"react-router-dom\";\nimport { Link as LinkS } from \"react-scroll\";\nexport const PortfolioContainer = styled.div`\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.2) 0%,\n    rgba(255, 255, 255, 1) 100%)`\n      : `#000  `};\n  padding-bottom: 250px;\n  @media screen and (max-width: 768px) {\n    padding: 40px 0;\n  }\n`;\nexport const PortfolioWrap = styled.div`\n  display: flex;\n  padding-top: 160px;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const PortfolioCart = styled.div`\n  width: 270px;\n  height: 400px;\n  margin: 12px;\n  border-radius: 15px;\n  border-color: rgba(220, 220, 220, 0.5) transparent transparent;\n  opacity: 0.8;\n  border: 3px inset;\n\n  background: ${({ lightbg }) =>\n    lightbg\n      ? `linear-gradient(90deg,\n    rgba(220, 214, 156, 0.6) 0%,\n    rgba(240, 225, 255, 1) 100%)`\n      : `#000  `};\n\n  &:hover {\n    cursor: pointer;\n\n    background-color: ${({ lightbg }) =>\n      lightbg\n        ? \"burlywood\"\n        : `linear-gradient(90deg, rgba(255,238,187,0.3144608185070903) 0%, rgba(207,207,207,0.5413515748096114) 100%)`};\n    transform: scale(1.04);\n    transition: all 0.4s ease;\n    opacity: 1;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  height: 160px;\n  margin-bottom: 15px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 10px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  border-radius: 15px 15px 15px 15px;\n  opacity: 0.7;\n  display: flex;\n`;\n\nexport const ImgIcon = styled.div`\n  opacity: 0.7;\n  display: flex;\n  color: ${({ lightbg }) => (lightbg ? \"#000\" : \"#fff\")};\n  font-size: 250px;\n`;\n\nexport const PortfolioH1 = styled.h1`\n  padding: 12px;\n  display: block;\n  text-align: center;\n\n  margin-top: 85px;\n  font-size: 48px;\n  line-height: 1.2;\n  font-weight: 300;\n  color: #fff;\n`;\n\nexport const PortfolioP = styled.p`\n  padding: 0px;\n  display: block;\n  font-size: 16px;\n  line-height: 16px;\n  font-weight: 700;\n  letter-spacing: 1.4px;\n  text-align: center;\n  color: #fff;\n`;\n\nexport const Nav = styled.nav`\n  background: ${({ scrolNAvigation, lightbg }) =>\n    scrolNAvigation\n      ? lightbg\n        ? `linear-gradient(90deg,\n  rgba(220, 214, 156, 0.2) 0%,\n  rgba(255, 255, 255, 1) 100%)`\n        : \"#0c0c0c\"\n      : \"transparent\"};\n\n  height: 80px;\n  display: flex;\n  margin-top: -80px;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  @media screen and (max-width: 960px) {\n    transition: 0.8 all case;\n  }\n`;\nexport const NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 24px;\n  max-width: 1100px;\n`;\nexport const NavLogo = styled(LinkR)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  justify-self: flex-start;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-left: 24px;\n  font-size: 2rem;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nexport const MobileIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 60%);\n    font-size: 1.8rem;\n    cursor: pointer;\n    color: #fff;\n  }\n`;\nexport const MobileIcon2 = styled.div`\n  color: ${({ lightbg }) =>\n    lightbg\n      ? `#000`\n      : `linear-gradient(90deg,\n  rgba(220, 214, 156, 0.2) 0%,\n  rgba(255, 255, 255, 1) 100%)`};\n  border-radius: 50px;\n\n  white-space: nowrap;\n  padding: 10px 20px;\n  margin-top: 10px;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    font-size: 24px;\n  }\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    margin-top: -5px;\n    right: 0;\n    transform: translate(-100%, 60%);\n    cursor: pointer;\n  }\n`;\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n  margin-right: -20px;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavItem = styled.li`\n  height: 80px;\n`;\n\nexport const NavLinks = styled(LinkS)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1 rem;\n  height: 100%;\n  cursor: pointer;\n  margin-left: 20px;\n\n  &.active {\n    border-bottom: 4px solid #fff;\n    border-bottom-color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  }\n`;\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-top: -20px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport img1 from \"../../images/elixir_logo_320.png\";\nimport img2 from \"../../images/img4.jpg\";\nimport img3 from \"../../images/img3.jpg\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  PortfolioContainer,\n  PortfolioWrap,\n  PortfolioCart,\n  PortfolioH1,\n  PortfolioP,\n  Img,\n  ImgWrap,\n  ImgIcon,\n} from \"./PortfolioElements\";\n\nimport { FaBitcoin } from \"react-icons/fa\";\n\nconst Portfolio = ({ lightbg, LightToggle }) => {\n  return (\n    <>\n      <PortfolioContainer lightbg={lightbg}>\n        <PortfolioWrap>\n          <PortfolioCart lightbg={lightbg}>\n            <ImgWrap>\n              <Img src={img1} alt=\"error\"></Img>\n            </ImgWrap>\n            <PortfolioH1 lightbg={lightbg}>Elixir</PortfolioH1>\n            <PortfolioP lightbg={lightbg}>\n              Smart irrigation and agriculture system\n            </PortfolioP>\n          </PortfolioCart>\n          <PortfolioCart lightbg={lightbg}>\n            <ImgWrap>\n              <ImgIcon lightbg={lightbg}>\n                <FaBitcoin />\n              </ImgIcon>\n            </ImgWrap>\n            <PortfolioH1 lightbg={lightbg}>Trading Bot</PortfolioH1>\n            <PortfolioP lightbg={lightbg}>Python</PortfolioP>\n          </PortfolioCart>\n          <PortfolioCart lightbg={lightbg}>\n            <ImgWrap>\n              <Img src={img3} alt=\"error\"></Img>\n            </ImgWrap>\n            <PortfolioH1 lightbg={lightbg}>Portfolio</PortfolioH1>\n            <PortfolioP lightbg={lightbg}>React Js</PortfolioP>\n          </PortfolioCart>\n        </PortfolioWrap>\n      </PortfolioContainer>\n    </>\n  );\n};\n\nexport default Portfolio;\n","import styled from \"styled-components\";\nimport { Link as LinkR } from \"react-router-dom\";\nimport { Link as LinkS } from \"react-scroll\";\n\nexport const Nav = styled.nav`\n  background: ${({ scrolNAvigation, lightbg }) =>\n    scrolNAvigation\n      ? lightbg\n        ? `linear-gradient(90deg,\n  rgba(220, 214, 156, 0.2) 0%,\n  rgba(255, 255, 255, 1) 100%)`\n        : \"#0c0c0c\"\n      : \"transparent\"};\n\n  height: 80px;\n  display: flex;\n  margin-top: -80px;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  @media screen and (max-width: 960px) {\n    transition: 0.8 all case;\n  }\n`;\nexport const NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 24px;\n  max-width: 1100px;\n`;\nexport const NavLogo = styled(LinkR)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  justify-self: flex-start;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-left: 24px;\n  font-size: 2rem;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nexport const MobileIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 60%);\n    font-size: 1.8rem;\n    cursor: pointer;\n    color: #fff;\n  }\n`;\nexport const MobileIcon2 = styled.div`\n  color: ${({ lightbg }) =>\n    lightbg\n      ? `#000`\n      : `linear-gradient(90deg,\n  rgba(220, 214, 156, 0.2) 0%,\n  rgba(255, 255, 255, 1) 100%)`};\n  border-radius: 50px;\n\n  white-space: nowrap;\n  padding: 10px 20px;\n  margin-top: 10px;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    font-size: 24px;\n  }\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    margin-top: -5px;\n    right: 0;\n    transform: translate(-100%, 60%);\n    cursor: pointer;\n  }\n`;\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n  margin-right: -20px;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavItem = styled.li`\n  height: 80px;\n`;\n\nexport const NavLinks = styled(LinkS)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1 rem;\n  height: 100%;\n  cursor: pointer;\n  margin-left: 20px;\n\n  &.active {\n    border-bottom: 4px solid #fff;\n    border-bottom-color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  }\n`;\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-top: -20px;\n`;\n","import React from \"react\";\nimport elixirImg1 from \"../../images/elixirposter.jpg\";\nimport {\n  Nav,\n  NavbarContainer,\n  NavLogo,\n  MobileIcon,\n  MobileIcon2,\n  NavBtn,\n} from \"./NavbarExElements\";\n\nimport Lightbox from \"react-awesome-lightbox\";\n\nimport \"react-awesome-lightbox/build/style.css\";\nconst NavbarEx = ({ closestate, changeToggle }) => {\n  return (\n    <>\n      <>\n        {closestate ? (\n          <Lightbox\n            image={elixirImg1}\n            title=\"Image Title\"\n            onClose={changeToggle}\n          />\n        ) : (\n          <></>\n        )}{\" \"}\n      </>\n    </>\n  );\n};\n\nexport default NavbarEx;\n","import styled from \"styled-components\";\nimport { Link as LinkR } from \"react-router-dom\";\nimport { Link as LinkS } from \"react-scroll\";\nexport const Nav = styled.nav`\n  background: ${({ scrolNAvigation, lightbg }) =>\n    scrolNAvigation\n      ? lightbg\n        ? `linear-gradient(90deg,\nrgba(220, 214, 156, 0.2) 0%,\nrgba(255, 255, 255, 1) 100%)`\n        : \"#0c0c0c\"\n      : \"transparent\"};\n\n  height: 80px;\n  display: flex;\n  margin-top: -80px;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  @media screen and (max-width: 960px) {\n    transition: 0.8 all case;\n  }\n`;\nexport const NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 24px;\n  max-width: 1100px;\n`;\nexport const NavLogo = styled(LinkR)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  justify-self: flex-start;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-left: 24px;\n  font-size: 2rem;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nexport const MobileIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 60%);\n    font-size: 1.8rem;\n    cursor: pointer;\n    color: #fff;\n  }\n`;\nexport const MobileIcon2 = styled.div`\n  color: ${({ lightbg }) =>\n    lightbg\n      ? `#000`\n      : `linear-gradient(90deg,\nrgba(220, 214, 156, 0.2) 0%,\nrgba(255, 255, 255, 1) 100%)`};\n  border-radius: 50px;\n\n  white-space: nowrap;\n  padding: 10px 20px;\n  margin-top: 10px;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    font-size: 24px;\n  }\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    margin-top: -5px;\n    right: 0;\n    transform: translate(-100%, 60%);\n    cursor: pointer;\n  }\n`;\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n  margin-right: -20px;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavItem = styled.li`\n  height: 80px;\n`;\n\nexport const NavLinks = styled(LinkS)`\n  color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1 rem;\n  height: 100%;\n  cursor: pointer;\n  margin-left: 20px;\n\n  &.active {\n    border-bottom: 4px solid #fff;\n    border-bottom-color: ${({ lightbg }) => (lightbg ? \"#0c0c0c\" : \"#fff\")};\n  }\n`;\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-top: -20px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Nav,\n  NavbarContainer,\n  NavLogo,\n  MobileIcon,\n  MobileIcon2,\n  NavBtn,\n} from \"./NavHome2Elements\";\nimport { FaBars, FaSun, FaMoon, FaBitcoin } from \"react-icons/fa\";\nimport { animateScroll as scroll } from \"react-scroll\";\nconst NavHome2 = ({ lightbg, LightToggle }) => {\n  const [scrolNAvigation, setNav] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const changeStatuofNav = () => {\n    if (window.scrollY >= 160) {\n      setNav(true);\n      if (lightbg) {\n        Nav.background = \"#000\";\n      } else {\n        Nav.background = \"#fff\";\n      }\n    } else {\n      setNav(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeStatuofNav);\n  }, []);\n  const toggleUp = () => {\n    scroll.scrollToTop();\n  };\n  return (\n    <>\n      <Nav scrolNAvigation={scrolNAvigation} lightbg={lightbg}>\n        <NavbarContainer>\n          <NavLogo to=\"/#\" onClick={toggleUp} lightbg={lightbg}>\n            Oguzhan\n          </NavLogo>\n          <MobileIcon onClick={toggle}>\n            <FaBars />\n          </MobileIcon>\n\n          <MobileIcon2 onClick={LightToggle} lightbg={lightbg}>\n            {lightbg ? <FaSun /> : <FaMoon style={{ color: \"#fff\" }} />}\n          </MobileIcon2>\n        </NavbarContainer>\n      </Nav>\n    </>\n  );\n};\n\nexport default NavHome2;\n","import React, { useState, useEffect } from \"react\";\nimport Portfolio from \"../Components/Portfolio\";\nimport Footer from \"../Components/Footer\";\nimport InfoSection from \"../Components/InfoSection\";\nimport NavbarEx from \"../Components/NavbarEx\";\nimport NavHome2 from \"../Components/NavHome2\";\nimport {\n  homeObjFive,\n  homeObjFour,\n  homeObjThree,\n} from \"../Components/InfoSection/Data\";\n\nconst Home2 = () => {\n  const [lightbg, setlight] = useState();\n  const [closestate, setclose] = useState(false);\n\n  const changeToggle = () => {\n    setclose(!closestate);\n  };\n\n  const getStat = () => {\n    const g = localStorage.getItem(\"bgStatus\");\n    if (JSON.parse(g) === true) {\n      setlight(false);\n    } else {\n      setlight(true);\n    }\n  };\n\n  const LightToggle = () => {\n    getStat();\n    setTimeout(() => {\n      setlight(!lightbg);\n    }, 10);\n\n    localStorage.setItem(\"bgStatus\", lightbg);\n  };\n  useEffect(() => {\n    getStat();\n    console.log(\"light\", lightbg);\n  });\n  return (\n    <>\n      <NavHome2 lightbg={lightbg} LightToggle={LightToggle}></NavHome2>\n      <Portfolio lightbg={lightbg} LightToggle={LightToggle}></Portfolio>\n      <InfoSection\n        {...homeObjThree}\n        lightbg={lightbg}\n        changeToggle={changeToggle}\n      ></InfoSection>\n\n      <InfoSection {...homeObjFour} lightbg={lightbg}></InfoSection>\n      <InfoSection {...homeObjFive} lightbg={lightbg}></InfoSection>\n      <NavbarEx closestate={closestate} changeToggle={changeToggle} />\n      <Footer lightbg={lightbg}></Footer>\n    </>\n  );\n};\n\nexport default Home2;\n","import React, { useEffect, useState } from \"react\";\n\nfunction Deneme() {\n  const [bgStatus, setlight] = useState();\n  const container = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    //alignItems: \"center\",\n    // alignItems: \"flex-start\",\n    border: \"1px #ccc solid\",\n    padding: \"10px\",\n  };\n  const box1 = {\n    flex: \"2\",\n    order: \"2\",\n  };\n  const container2 = {};\n  const getStat = () => {\n    const g = localStorage.getItem(\"bgStatus\");\n    if (JSON.parse(g) === true) {\n      setlight(true);\n    } else {\n      setlight(false);\n    }\n  };\n  const box2 = { flex: \"1\", order: \"1\" };\n\n  const box3 = { flex: \"2\", order: \"3\" };\n  useEffect(() => {\n    getStat();\n    console.log(\"bgStatus\", bgStatus);\n  }, [getStat]);\n  return (\n    <>\n      {bgStatus ? (\n        <div>\n          <div style={container}>\n            <div style={box1}>\n              <h3>Box1</h3>\n              <p>\n                {bgStatus} Right click in any editor and Generate Dummy Text...\n                1b) Or open command and choose Generate Dummy Text... Type how\n                many words you\n              </p>\n            </div>\n            <div style={box2}>\n              <h3>Box2</h3>\n              <p>\n                {\" \"}\n                Right click in any editor and Generate Dummy Text... 1b) Or open\n                command and choose Generate Dummy Text... Type how many words\n                you\n              </p>\n            </div>\n            <div style={box3}>\n              <h3>Box 3</h3>\n              <p>\n                {\" \"}\n                Right click in any editor and Generate Dummy Text... 1b) Or open\n                command and choose Generate Dummy Text... Type how many words\n                you\n              </p>\n            </div>\n          </div>\n          <div style={container2}>\n            <div style={box1}>\n              <h3>Box1</h3>\n              <p>\n                {\" \"}\n                Right click in any editor and Generate Dummy Text... 1b) Or open\n                command and choose Generate Dummy Text... Type how many words\n                you\n              </p>\n            </div>\n            <div style={box2}>\n              <h3>Box2</h3>\n              <p>\n                {\" \"}\n                Right click in any editor and Generate Dummy Text... 1b) Or open\n                command and choose Generate Dummy Text... Type how many words\n                you\n              </p>\n            </div>\n            <div style={box3}>\n              <h3>Box 3</h3>\n              <p>\n                {\" \"}\n                Right click in any editor and Generate Dummy Text... 1b) Or open\n                command and choose Generate Dummy Text... Type how many words\n                you\n              </p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>deneme</div>\n      )}\n    </>\n  );\n}\nexport default Deneme;\n","import Home from \"./pages/home\";\nimport Home2 from \"./pages/home2\";\nimport Deneme from \"./Components/Deneme\";\nimport GalaryRew from \"./Components/Galary/GalaryRew\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path={\"/\"} exact component={Home} />\n          <Route path={\"/gallery\"} exact component={GalaryRew} />\n          <Route path={\"/portfolios\"} exact component={Home2} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/elixirposter.0049bd52.jpg\";"],"sourceRoot":""}